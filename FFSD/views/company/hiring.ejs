<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Add CSRF token meta tag -->
    <title>Worker Management Dashboard</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet" />
    <!-- Add Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Arial, sans-serif;
        }
        
        :root {
            --primary-green: #4D7A70;
            --secondary-green: #6A9E8E;
            --light-green: #A3C5BB;
            --dark-grey: #363636;
            --medium-grey: #5A5A5A;
            --light-grey: #E0E0E0;
            --white: #FFFFFF;
            --black: #000000;
            --shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
            --transition: all 0.3s ease;
            --border-radius: 8px;
            --font-size-h1: 24px;
            --font-size-h2: 20px;
            --font-size-h3: 18px;
            --font-size-h4: 16px;
            --font-size-body: 14px;
            --font-size-small: 12px;
        }

        body {
            background-color: var(--white);
            color: var(--dark-grey);
            line-height: 1.6;
            font-size: var(--font-size-body);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .dashboard-header {
            background-color: var(--primary-green);
            color: var(--white);
            padding: 15px 0;
            margin-bottom: 20px;
            box-shadow: var(--shadow);
        }

        .dashboard-header h1 {
            font-size: var(--font-size-h1);
            font-weight: 600;
        }

        .tabs {
            display: flex;
            border-bottom: 2px solid var(--light-grey);
            margin-bottom: 25px;
            background-color: var(--white);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            position: relative;
        }

        .tab {
            padding: 15px 25px;
            font-size: var(--font-size-body);
            cursor: pointer;
            color: var(--dark-grey);
            transition: var(--transition);
            position: relative;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .tab:hover {
            background-color: rgba(77, 122, 112, 0.05);
        }

        .tab.active {
            font-weight: 600;
            color: var(--primary-green);
        }

        .tab.active::after {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 0;
            width: 100%;
            height: 3px;
            background-color: var(--primary-green);
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .section-header h2 {
            font-size: var(--font-size-h2);
            font-weight: 600;
            color: var(--dark-grey);
        }

        .filter-controls {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .search-input, .filter-dropdown {
            padding: 10px 15px;
            border: 1px solid var(--light-grey);
            border-radius: var(--border-radius);
            font-size: var(--font-size-body);
            transition: var(--transition);
        }

        .search-input:focus, .filter-dropdown:focus {
            outline: none;
            border-color: var(--primary-green);
            box-shadow: 0 0 0 2px rgba(77, 122, 112, 0.2);
        }

        .search-input {
            width: 250px;
        }

        .section {
            display: none;
            animation: fadeIn 0.3s ease;
        }

        .section.active {
            display: block;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .worker-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 20px;
        }

        .worker-card {
            background: var(--white);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            overflow: hidden;
            transition: var(--transition);
            display: flex;
            flex-direction: column;
        }

        .worker-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        }

        .worker-card-header {
            position: relative;
            background-color: var(--light-green);
            padding: 20px;
            text-align: center;
        }

        .profile-image {
            width: 80px;
            height: 60px;
            border-radius: 10px;
            border: 3px solid var(--white);
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            object-fit: cover;
            transition: var(--transition);
        }

        .profile-image:hover {
            transform: scale(1.05);
            border-color: var(--primary-green);
        }

        .worker-rating {
            position: absolute;
            top: 15px;
            right: 15px;
            background-color: var(--white);
            padding: 5px 10px;
            border-radius: 20px;
            font-size: var(--font-size-small);
            font-weight: 600;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .worker-rating i {
            color: #f4a261;
            margin-right: 3px;
        }

        .worker-info {
            padding: 20px;
            flex-grow: 1;
        }

        .worker-info h3 {
            font-size: var(--font-size-h3);
            margin-bottom: 10px;
            color: var(--dark-grey);
        }

        .worker-info p {
            font-size: var(--font-size-body);
            color: var(--medium-grey);
            margin-bottom: 8px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .tags {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-top: 15px;
        }

        .tag {
            background: var(--light-green);
            color: var(--primary-green);
            padding: 5px 12px;
            border-radius: 20px;
            font-size: var(--font-size-small);
            font-weight: 500;
            transition: var(--transition);
        }

        .tag:hover {
            background-color: var(--primary-green);
            color: var(--white);
        }

        .worker-actions {
            padding: 15px 20px;
            display: flex;
            justify-content: space-between;
            gap: 10px;
            border-top: 1px solid var(--light-grey);
            background-color: #fafafa;
        }

        .btn {
            padding: 10px 15px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: var(--font-size-body);
            font-weight: 500;
            transition: var(--transition);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        .btn:hover {
            transform: translateY(-2px);
        }

        .btn-view {
            background: #f0f0f0;
            color: var(--dark-grey);
            flex: 1;
        }

        .btn-view:hover {
            background: var(--light-grey);
        }

        .btn-hire {
            background: var(--primary-green);
            color: var(--white);
            flex: 1;
        }

        .btn-hire:hover {
            background: #41665d;
        }

        .btn-reject {
            background: #e63946;
            color: var(--white);
        }

        .btn-reject:hover {
            background: #d32f3a;
        }

        .btn-toggle-details {
            background: #f0f0f0;
            color: var(--dark-grey);
        }

        .btn-toggle-details:hover {
            background: var(--light-grey);
        }

        .request-list {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .request-card {
            background: var(--white);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            padding: 20px;
            display: flex;
            flex-direction: column;
            gap: 15px;
            transition: var(--transition);
        }

        .request-card:hover {
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .request-card .left {
            display: flex;
            gap: 20px;
        }

        .request-info {
            flex: 1;
        }

        .request-info h3 {
            font-size: var(--font-size-h3);
            margin-bottom: 12px;
            color: var(--dark-grey);
        }

        .request-details {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 10px;
        }

        .detail-item {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .detail-label {
            font-size: var(--font-size-small);
            color: var(--medium-grey);
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .detail-value {
            font-size: var(--font-size-body);
            color: var(--dark-grey);
            font-weight: 500;
        }

        .request-actions {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .table-responsive {
            overflow-x: auto;
            background: var(--white);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
        }

        .requested-table {
            width: 100%;
            border-collapse: collapse;
        }

        .requested-table th,
        .requested-table td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid var(--light-grey);
            font-size: var(--font-size-body);
        }

        .requested-table th {
            background: #f9f9f9;
            font-weight: 600;
            color: var(--dark-grey);
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .requested-table th i {
            margin-right: 8px;
            color: var(--primary-green);
        }

        .requested-table tr:hover {
            background-color: rgba(77, 122, 112, 0.05);
        }

        .status {
            padding: 5px 10px;
            border-radius: 20px;
            font-size: var(--font-size-small);
            font-weight: 500;
            display: inline-block;
        }

        .status-accepted {
            background: var(--light-green);
            color: var(--primary-green);
        }

        .status-rejected {
            background: #f8d7da;
            color: #e63946;
        }

        .status-pending {
            background: #fef3c7;
            color: #d97706;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
            z-index: 1000;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .modal.show {
            opacity: 1;
        }

        .modal-content {
            background: var(--white);
            border-radius: var(--border-radius);
            width: 90%;
            max-width: 700px;
            max-height: 90vh;
            overflow-y: auto;
            position: relative;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
            transform: translateY(-20px);
            transition: transform 0.3s ease;
        }

        .modal.show .modal-content {
            transform: translateY(0);
        }

        .modal-header {
            display: flex;
            align-items: center;
            padding: 20px;
            border-bottom: 1px solid var(--light-grey);
            background-color: var(--light-green);
            gap: 20px;
        }

        .modal-profile-image {
            width: 100px;
            height: 80px;
            border-radius: 12px;
            border: 4px solid var(--white);
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            object-fit: cover;
            transition: var(--transition);
        }

        .modal-profile-image:hover {
            transform: scale(1.05);
            border-color: var(--primary-green);
        }

        .modal-header-info h2 {
            font-size: var(--font-size-h2);
            margin-bottom: 5px;
        }

        .modal-header-info p {
            font-size: var(--font-size-body);
            color: var(--medium-grey);
            margin-bottom: 10px;
        }

        .modal-rating {
            color: #f4a261;
            font-size: var(--font-size-body);
        }

        .modal-body {
            padding: 20px;
        }

        .modal-section {
            margin-bottom: 25px;
        }

        .modal-section h4 {
            font-size: var(--font-size-h4);
            margin-bottom: 10px;
            color: var(--dark-grey);
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .modal-section h4 i {
            color: var(--primary-green);
        }

        .modal-section p {
            font-size: var(--font-size-body);
            color: var(--dark-grey);
        }

        .modal-details {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 10px;
        }

        .modal-detail-item {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .modal-detail-label {
            font-size: var(--font-size-small);
            color: var(--medium-grey);
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .modal-detail-value {
            font-size: var(--font-size-body);
            color: var(--dark-grey);
            font-weight: 500;
        }

        .modal-detail-value a {
            color: var(--primary-green);
            text-decoration: none;
        }

        .modal-detail-value a:hover {
            text-decoration: underline;
        }

        .projects-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 15px;
        }

        .project {
            background: #f9f9f9;
            border-radius: var(--border-radius);
            overflow: hidden;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        }

        .project img {
            width: 100%;
            height: 200px;
            object-fit: cover;
        }

        .project-info {
            padding: 15px;
        }

        .project-info h5 {
            font-size: var(--font-size-h4);
            margin-bottom: 5px;
        }

        .project-info p {
            font-size: var(--font-size-body);
            color: var(--medium-grey);
            margin-bottom: 5px;
        }

        .close {
            position: absolute;
            top: 15px;
            right: 20px;
            font-size: 28px;
            cursor: pointer;
            color: var(--dark-grey);
            transition: var(--transition);
            z-index: 10;
        }

        .close:hover {
            color: #e63946;
            transform: scale(1.1);
        }

        .modal-footer {
            padding: 15px 20px;
            display: flex;
            justify-content: flex-end;
            border-top: 1px solid var(--light-grey);
            background-color: #fafafa;
        }

        .modal-hire-btn {
            padding: 12px 25px;
            font-size: var(--font-size-body);
        }

        .hire-modal-content {
            max-width: 500px;
        }

        .hire-modal-header {
            background-color: var(--white);
            border-bottom: 1px solid var(--light-grey);
        }

        .hire-modal-header h2 {
            font-size: var(--font-size-h2);
            color: var(--dark-grey);
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            font-size: var(--font-size-body);
            color: var(--medium-grey);
            margin-bottom: 5px;
            font-weight: 500;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 10px;
            border: 1px solid var(--light-grey);
            border-radius: var(--border-radius);
            font-size: var(--font-size-body);
            transition: var(--transition);
        }

        .form-group input:focus,
        .form-group select:focus {
            outline: none;
            border-color: var(--primary-green);
            box-shadow: 0 0 0 2px rgba(77, 122, 112, 0.2);
        }

        @media (max-width: 992px) {
            .worker-grid {
                grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            }
            .request-details {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            }
        }

        @media (max-width: 768px) {
            .tabs {
                flex-wrap: wrap;
            }
            .tab {
                flex-grow: 1;
                text-align: center;
                padding: 12px 15px;
            }
            .section-header {
                flex-direction: column;
                align-items: flex-start;
            }
            .filter-controls {
                width: 100%;
            }
            .search-input {
                flex-grow: 1;
            }
            .request-card .left {
                flex-direction: column;
            }
            .request-actions {
                justify-content: space-between;
            }
            .modal-content,
            .hire-modal-content {
                width: 95%;
            }
            .modal-header,
            .hire-modal-header {
                flex-direction: column;
                text-align: center;
            }
            .projects-grid {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 576px) {
            .worker-grid {
                grid-template-columns: 1fr;
            }
            .request-actions {
                flex-direction: column;
            }
            .btn {
                width: 100%;
            }
            .profile-image {
                width: 60px;
                height: 45px;
            }
            .modal-profile-image {
                width: 80px;
                height: 60px;
            }
        }
    </style>
</head>
<body>
    <%- include('navbar_company') %>

    <div class="container">
        <!-- Tabs -->
        <div class="tabs">
            <div class="tab active" data-tab="find-workers">
                <i class="fas fa-search"></i> Find Workers
            </div>
            <div class="tab" data-tab="worker-requests">
                <i class="fas fa-envelope"></i> Worker Requests
            </div>
            <div class="tab" data-tab="requested-workers">
                <i class="fas fa-clipboard-list"></i> Requested Workers
            </div>
        </div>

        <!-- Find Workers Section -->
        <div id="find-workers" class="section active">
            <div class="section-header">
                <h2>Available Workers</h2>
                <div class="filter-controls">
                    <input type="text" placeholder="Search workers..." class="search-input">
                    <select class="filter-dropdown">
                        <option value="all">All Skills</option>
                        <option value="carpentry">Carpentry</option>
                        <option value="electrical">Electrical</option>
                        <option value="plumbing">Plumbing</option>
                        <option value="masonry">Masonry</option>
                        <option value="painting">Painting</option>
                    </select>
                </div>
            </div>
            
            <div class="worker-grid">
                <% workers.forEach(worker => { %>
                    <div class="worker-card">
                        <div class="worker-card-header">
                            <img src="<%= worker.profileImage || 'https://via.placeholder.com/80x60' %>" alt="Profile" class="profile-image">
                            <div class="worker-rating">
                                <span><i class="fas fa-star"></i> <%= worker.rating %></span>
                            </div>
                        </div>
                        <div class="worker-info">
                            <h3><%= worker.name %></h3>
                            <p class="professional-title"><i class="fas fa-user-tie"></i> <%= worker.professionalTitle || 'N/A' %></p>
                            <p class="specialization"><i class="fas fa-tools"></i> <%= worker.specialization %></p>
                            <p class="experience"><i class="fas fa-briefcase"></i> <%= worker.experience %> years experience</p>
                            <p class="availability"><i class="fas fa-calendar-check"></i> <%= worker.availability %></p>
                            <div class="tags">
                                <% worker.specialties.forEach(skill => { %>
                                    <span class="tag"><%= skill %></span>
                                <% }) %>
                            </div>
                        </div>
                        <div class="worker-actions">
                            <button class="btn btn-view" 
                                    data-worker="<%= worker.name %>" 
                                    data-professional-title="<%= worker.professionalTitle || 'N/A' %>" 
                                    data-rating="<%= worker.rating %>" 
                                    data-about="<%= worker.about || 'No information available.' %>" 
                                    data-specialties="<%= worker.specialties.join(', ') %>" 
                                    data-projects='<%= JSON.stringify(worker.projects) %>' 
                                    data-phone="<%= worker.phone %>" 
                                    data-email="<%= worker.email %>"
                                    data-specialization="<%= worker.specialization %>"
                                    data-experience="<%= worker.experience %>"
                                    data-is-architect="<%= worker.isArchitect %>"
                                    data-availability="<%= worker.availability %>"
                                    data-services-offered="<%= worker.servicesOffered.join(', ') %>"
                                    data-certificate-files="<%= worker.certificateFiles.join(', ') %>"
                                    data-profile-image="<%= worker.profileImage || 'https://via.placeholder.com/80x60' %>"
                                    data-worker-id="<%= worker._id %>">
                                <i class="fas fa-eye"></i> View Profile
                            </button>
                            <button class="btn btn-hire hire-btn" 
                                    data-worker="<%= worker.name %>" 
                                    data-worker-id="<%= worker._id %>">
                                <i class="fas fa-user-plus"></i> Hire
                            </button>
                        </div>
                    </div>
                <% }) %>
            </div>
        </div>

        <!-- Worker Requests Section -->
        <div id="worker-requests" class="section">
            <div class="section-header">
                <h2>Pending Worker Requests</h2>
                <div class="filter-controls">
                    <input type="text" placeholder="Search requests..." class="search-input">
                </div>
            </div>

            <div class="request-list">
                <% if (workerRequests.length === 0) { %>
                    <p>No worker requests at this time.</p>
                <% } else { %>
                    <% workerRequests.forEach(request => { %>
                        <div class="request-card" data-worker-id="<%= request.workerId._id %>" data-request-id="<%= request._id %>"
                             data-full-name="<%= request.workerId.name %>" 
                             data-email="<%= request.workerId.email %>" 
                             data-location="<%= request.location %>" 
                             data-linkedin="<%= request.linkedin || 'https://www.linkedin.com/feed/' %>" 
                             data-experience="<%= request.workerId.experience %>" 
                             data-expected-salary="<%= request.expectedSalary %>" 
                             data-position-applying="<%= request.positionApplying %>" 
                             data-primary-skills='<%= JSON.stringify(request.workerId.specialties || ["Acting", "Fighting"]) %>' 
                             data-work-experience="<%= request.workExperience || 'Worked in Baahubali' %>" 
                             data-resume="<%= request.resume || 'BuildAndBeyond/ah2bhgrmtzsenzkaop5n' %>" 
                             data-terms-agree="<%= request.termsAgree || false %>" 
                             data-worker-id="<%= request.workerId._id %>" 
                             data-company-id="<%= request.companyId %>" 
                             data-comp-name="<%= request.compName || 'alluarjun constructions' %>" 
                             data-status="<%= request.status %>" 
                             data-created-at="<%= request.createdAt %>" 
                             data-updated-at="<%= request.updatedAt %>" 
                             data-v="<%= request.__v %>">
                            <div class="left">
                                <img src="<%= request.workerId.profileImage || 'https://via.placeholder.com/80x60' %>" alt="Profile" class="profile-image">
                                <div class="request-info">
                                    <h3><%= request.workerId.name %></h3>
                                    <div class="request-details">
                                        <div class="detail-item">
                                            <span class="detail-label"><i class="fas fa-envelope"></i> Email:</span>
                                            <span class="detail-value"><%= request.workerId.email %></span>
                                        </div>
                                        <div class="detail-item">
                                            <span class="detail-label"><i class="fas fa-user-tie"></i> Role:</span>
                                            <span class="detail-value"><%= request.position %></span>
                                        </div>
                                        <div class="detail-item">
                                            <span class="detail-label"><i class="fas fa-tools"></i> Specialization:</span>
                                            <span class="detail-value"><%= request.workerId.specialization %></span>
                                        </div>
                                        <div class="detail-item">
                                            <span class="detail-label"><i class="fas fa-briefcase"></i> Experience:</span>
                                            <span class="detail-value"><%= request.workerId.experience %> years</span>
                                        </div>
                                        <div class="detail-item">
                                            <span class="detail-label"><i class="fas fa-calendar-check"></i> Availability:</span>
                                            <span class="detail-value"><%= request.workerId.availability %></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="request-actions">
                                <button class="btn btn-view" 
                                        data-worker="<%= request.workerId.name %>" 
                                        data-professional-title="<%= request.workerId.professionalTitle || 'N/A' %>" 
                                        data-rating="<%= request.workerId.rating %>" 
                                        data-about="<%= request.workerId.about || 'No information available.' %>" 
                                        data-specialties="<%= request.workerId.specialties.join(', ') %>" 
                                        data-projects='<%= JSON.stringify(request.workerId.projects) %>' 
                                        data-phone="<%= request.workerId.phone %>" 
                                        data-email="<%= request.workerId.email %>"
                                        data-specialization="<%= request.workerId.specialization %>"
                                        data-experience="<%= request.workerId.experience %>"
                                        data-is-architect="<%= request.workerId.isArchitect %>"
                                        data-availability="<%= request.workerId.availability %>"
                                        data-services-offered="<%= request.workerId.servicesOffered.join(', ') %>"
                                        data-certificate-files="<%= request.workerId.certificateFiles.join(', ') %>"
                                        data-profile-image="<%= request.workerId.profileImage || 'https://via.placeholder.com/80x60' %>"
                                        data-worker-id="<%= request.workerId._id %>">
                                    <i class="fas fa-eye"></i> View Profile
                                </button>
                                <button class="btn btn-hire btn-accept" data-request-id="<%= request._id %>">
                                    <i class="fas fa-check"></i> Accept
                                </button>
                                <button class="btn btn-reject" data-request-id="<%= request._id %>">
                                    <i class="fas fa-times"></i> Reject
                                </button>
                                <button class="btn btn-toggle-details">
                                    <i class="fas fa-info-circle"></i> View Details
                                </button>
                            </div>
                        </div>
                    <% }) %>
                <% } %>
            </div>
        </div>

        <!-- Requested Workers Section -->
        <div id="requested-workers" class="section">
            <div class="section-header">
                <h2>Requested Workers Status</h2>
                <div class="filter-controls">
                    <input type="text" placeholder="Search workers..." class="search-input">
                    <select class="filter-dropdown" id="status-filter">
                        <option value="all">All Status</option>
                        <option value="accepted">Accepted</option>
                        <option value="pending">Pending</option>
                        <option value="rejected">Rejected</option>
                    </select>
                </div>
            </div>

            <div class="table-responsive">
                <table class="requested-table">
                    <thead>
                        <tr>
                            <th><i class="fas fa-user"></i> Worker Name</th>
                            <th><i class="fas fa-envelope"></i> Email</th>
                            <th><i class="fas fa-briefcase"></i> Position</th>
                            <th><i class="fas fa-map-marker-alt"></i> Location</th>
                            <th><i class="fas fa-rupee-sign"></i> Expected Salary</th>
                            <th><i class="fas fa-info-circle"></i> Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (requestedWorkers && requestedWorkers.length > 0) { %>
                            <% requestedWorkers.forEach(request => { %>
                                <tr>
                                    <td><%= request.worker.name %></td>
                                    <td><%= request.worker.email %></td>
                                    <td><%= request.positionApplying %></td>
                                    <td><%= request.location %></td>
                                    <td>₹<%= request.expectedSalary.toLocaleString('en-IN') %></td>
                                    <td><span class="status status-<%= request.status.toLowerCase() %>"><%= request.status %></span></td>
                                </tr>
                            <% }) %>
                        <% } else { %>
                            <tr>
                                <td colspan="6">No requested workers found.</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Hire Request Modal -->
        <div id="hire-modal" class="modal">
            <div class="modal-content hire-modal-content">
                <span class="close">×</span>
                <div class="modal-header hire-modal-header">
                    <h2>Hire Worker</h2>
                </div>
                <form id="hire-form">
                    <div class="modal-body">
                        <p id="hire-modal-worker-name" style="margin-bottom: 15px;"></p>
                        <div class="form-group">
                            <label for="position">Position</label>
                            <input type="text" id="position" name="position" placeholder="Enter position (e.g., Master Carpenter)" required>
                        </div>
                        <div class="form-group">
                            <label for="location">Location</label>
                            <input type="text" id="location" name="location" placeholder="Enter job location (e.g., Guntur)" required>
                        </div>
                        <div class="form-group">
                            <label for="salary">Salary (₹/hr)</label>
                            <input type="number" id="salary" name="salary" placeholder="Enter salary (e.g., 1200)" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-view" id="cancel-hire">
                            <i class="fas fa-times"></i> Cancel
                        </button>
                        <button type="submit" class="btn btn-hire" id="submit-hire">
                            <i class="fas fa-paper-plane"></i> Send Request
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Profile Modal -->
        <div id="profile-modal" class="modal">
            <div class="modal-content">
                <span class="close">×</span>
                <div class="modal-header">
                    <img id="modal-profile-image" src="" alt="Profile" class="modal-profile-image">
                    <div class="modal-header-info">
                        <h2 id="modal-name"></h2>
                        <p id="modal-professional-title"></p>
                        <div id="modal-rating" class="modal-rating"></div>
                        <p id="modal-availability"></p>
                        <p id="modal-is-architect"></p>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="modal-section">
                        <h4><i class="fas fa-info-circle"></i> About</h4>
                        <p id="modal-about"></p>
                    </div>
                    <div class="modal-section">
                        <h4><i class="fas fa-tools"></i> Specialization</h4>
                        <p id="modal-specialization"></p>
                    </div>
                    <div class="modal-section">
                        <h4><i class="fas fa-briefcase"></i> Experience</h4>
                        <p id="modal-experience"></p>
                    </div>
                    <div class="modal-section">
                        <h4><i class="fas fa-tags"></i> Specialties</h4>
                        <p id="modal-specialties"></p>
                    </div>
                    <div class="modal-section">
                        <h4><i class="fas fa-concierge-bell"></i> Services Offered</h4>
                        <p id="modal-services-offered"></p>
                    </div>
                    <div class="modal-section">
                        <h4><i class="fas fa-certificate"></i> Certificates</h4>
                        <div id="modal-certificate-files"></div>
                    </div>
                    <div class="modal-section">
                        <h4><i class="fas fa-project-diagram"></i> Notable Projects</h4>
                        <div id="modal-projects" class="projects-grid"></div>
                    </div>
                    <div class="modal-section">
                        <h4><i class="fas fa-address-book"></i> Contact Information</h4>
                        <div class="modal-details">
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-envelope"></i> Email:</span>
                                <span class="modal-detail-value" id="modal-email"></span>
                            </div>
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-phone"></i> Phone:</span>
                                <span class="modal-detail-value" id="modal-phone"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-hire modal-hire-btn" data-worker-id="">
                        <i class="fas fa-user-plus"></i> Hire
                    </button>
                </div>
            </div>
        </div>

        <!-- View Details Modal -->
        <div id="details-modal" class="modal">
            <div class="modal-content">
                <span class="close">×</span>
                <div class="modal-header">
                    <img id="details-modal-profile-image" src="https://via.placeholder.com/100x80" alt="Profile" class="modal-profile-image">
                    <div class="modal-header-info">
                        <h2 id="details-modal-full-name"></h2>
                        <p id="details-modal-status"></p>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="modal-section">
                        <h4><i class="fas fa-address-book"></i> Personal Information</h4>
                        <div class="modal-details">
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-envelope"></i> Email:</span>
                                <span class="modal-detail-value" id="details-modal-email"></span>
                            </div>
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-map-marker-alt"></i> Location:</span>
                                <span class="modal-detail-value" id="details-modal-location"></span>
                            </div>
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-linkedin"></i> LinkedIn:</span>
                                <span class="modal-detail-value" id="details-modal-linkedin"></span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-section">
                        <h4><i class="fas fa-briefcase"></i> Professional Details</h4>
                        <div class="modal-details">
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-clock"></i> Experience:</span>
                                <span class="modal-detail-value" id="details-modal-experience"></span>
                            </div>
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-rupee-sign"></i> Expected Salary:</span>
                                <span class="modal-detail-value" id="details-modal-expected-salary"></span>
                            </div>
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-user-tie"></i> Position Applying:</span>
                                <span class="modal-detail-value" id="details-modal-position-applying"></span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-section">
                        <h4><i class="fas fa-list"></i> Skills & Experience</h4>
                        <div class="modal-details">
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-tools"></i> Primary Skills:</span>
                                <span class="modal-detail-value" id="details-modal-primary-skills"></span>
                            </div>
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-file-alt"></i> Work Experience:</span>
                                <span class="modal-detail-value" id="details-modal-work-experience"></span>
                            </div>
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-file-pdf"></i> Resume:</span>
                                <span class="modal-detail-value" id="details-modal-resume"></span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-section">
                        <h4><i class="fas fa-info-circle"></i> Application Details</h4>
                        <div class="modal-details">
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-check-square"></i> Terms Agreed:</span>
                                <span class="modal-detail-value" id="details-modal-terms-agree"></span>
                            </div>
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-user"></i> Worker ID:</span>
                                <span class="modal-detail-value" id="details-modal-worker-id"></span>
                            </div>
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-building"></i> Company ID:</span>
                                <span class="modal-detail-value" id="details-modal-company-id"></span>
                            </div>
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-building"></i> Company Name:</span>
                                <span class="modal-detail-value" id="details-modal-comp-name"></span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-section">
                        <h4><i class="fas fa-history"></i> Timestamps</h4>
                        <div class="modal-details">
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-calendar"></i> Created At:</span>
                                <span class="modal-detail-value" id="details-modal-created-at"></span>
                            </div>
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-calendar"></i> Updated At:</span>
                                <span class="modal-detail-value" id="details-modal-updated-at"></span>
                            </div>
                            <div class="modal-detail-item">
                                <span class="modal-detail-label"><i class="fas fa-cog"></i> Version:</span>
                                <span class="modal-detail-value" id="details-modal-v"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-view" id="close-details-modal">
                        <i class="fas fa-times"></i> Close
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // DOM Elements
        const tabs = document.querySelectorAll('.tab');
        const sections = document.querySelectorAll('.section');
        const profileModal = document.getElementById('profile-modal');
        const hireModal = document.getElementById('hire-modal');
        const detailsModal = document.getElementById('details-modal');
        const modalCloseButtons = document.querySelectorAll('.modal .close');
        const viewProfileButtons = document.querySelectorAll('.btn-view');
        const hireButtons = document.querySelectorAll('.hire-btn');
        const toggleDetailsButtons = document.querySelectorAll('.btn-toggle-details');
        const actionButtons = document.querySelectorAll('.btn-hire:not(.hire-btn), .btn-reject');
        const searchInputs = document.querySelectorAll('.search-input');
        const filterDropdowns = document.querySelectorAll('.filter-dropdown');
        const cancelHireBtn = document.getElementById('cancel-hire');
        const submitHireBtn = document.getElementById('submit-hire');
        const hireModalWorkerName = document.getElementById('hire-modal-worker-name');
        const closeDetailsModalBtn = document.getElementById('close-details-modal');

        // Initialize the app
        document.addEventListener('DOMContentLoaded', function() {
            initializeTabs();
            initializeProfileViewButtons();
            initializeHireButtons();
            initializeToggleDetailsButtons();
            initializeActionButtons();
            initializeSearchAndFilters();
            initializeModalEvents();
            initializeWorkerCards();
        });

        // Tab Switching Functionality
        function initializeTabs() {
            tabs.forEach(tab => {
                tab.addEventListener('click', () => {
                    tabs.forEach(t => t.classList.remove('active'));
                    sections.forEach(section => section.classList.remove('active'));
                    
                    tab.classList.add('active');
                    const targetSectionId = tab.getAttribute('data-tab');
                    document.getElementById(targetSectionId).classList.add('active');
                });
            });
        }

        // Profile View Buttons Initialization
        function initializeProfileViewButtons() {
            viewProfileButtons.forEach(button => {
                button.addEventListener('click', (event) => {
                    event.preventDefault();

                    const workerName = button.getAttribute('data-worker') || 'Unknown Worker';
                    const professionalTitle = button.getAttribute('data-professional-title') || 'N/A';
                    const workerRating = button.getAttribute('data-rating') || '0';
                    const workerAbout = button.getAttribute('data-about') || 'No information available.';
                    const workerSpecialties = button.getAttribute('data-specialties') || 'None';
                    let workerProjects;
                    try {
                        workerProjects = JSON.parse(button.getAttribute('data-projects') || '[]');
                    } catch (e) {
                        console.error('Error parsing projects:', e);
                        workerProjects = [];
                    }
                    const workerPhone = button.getAttribute('data-phone') || 'N/A';
                    const workerEmail = button.getAttribute('data-email') || 'N/A';
                    const workerSpecialization = button.getAttribute('data-specialization') || 'N/A';
                    const workerExperience = button.getAttribute('data-experience') || '0';
                    const isArchitect = button.getAttribute('data-is-architect') === 'true' ? 'Architect' : 'Not an Architect';
                    const workerAvailability = button.getAttribute('data-availability') || 'N/A';
                    const workerServicesOffered = button.getAttribute('data-services-offered') || 'None';
                    const certificateFiles = button.getAttribute('data-certificate-files')?.split(', ') || [];
                    const profileImage = button.getAttribute('data-profile-image') || '';
                    const workerId = button.getAttribute('data-worker-id') || '';

                    const modalName = document.getElementById('modal-name');
                    const modalProfessionalTitle = document.getElementById('modal-professional-title');
                    const modalAbout = document.getElementById('modal-about');
                    const modalSpecialties = document.getElementById('modal-specialties');
                    const modalPhone = document.getElementById('modal-phone');
                    const modalEmail = document.getElementById('modal-email');
                    const modalSpecialization = document.getElementById('modal-specialization');
                    const modalExperience = document.getElementById('modal-experience');
                    const modalIsArchitect = document.getElementById('modal-is-architect');
                    const modalAvailability = document.getElementById('modal-availability');
                    const modalServicesOffered = document.getElementById('modal-services-offered');
                    const modalCertificateFiles = document.getElementById('modal-certificate-files');
                    const modalProfileImage = document.getElementById('modal-profile-image');
                    const modalRating = document.getElementById('modal-rating');
                    const projectsContainer = document.getElementById('modal-projects');
                    const modalHireBtn = document.querySelector('.modal-hire-btn');

                    if (!modalName || !modalProfessionalTitle || !modalAbout || !modalSpecialties || 
                        !modalPhone || !modalEmail || !modalSpecialization || !modalExperience || 
                        !modalIsArchitect || !modalAvailability || !modalServicesOffered || 
                        !modalCertificateFiles || !modalProfileImage || !modalRating || !projectsContainer || !modalHireBtn) {
                        console.error('One or more modal elements are missing.');
                        showNotification('Error: Unable to display profile.', 'error');
                        return;
                    }

                    modalName.textContent = workerName;
                    modalProfessionalTitle.textContent = professionalTitle;
                    modalAbout.textContent = workerAbout;
                    modalSpecialties.textContent = workerSpecialties;
                    modalPhone.textContent = workerPhone;
                    modalEmail.textContent = workerEmail;
                    modalSpecialization.textContent = workerSpecialization;
                    modalExperience.textContent = `${workerExperience} years`;
                    modalIsArchitect.textContent = isArchitect;
                    modalAvailability.textContent = `Availability: ${workerAvailability}`;
                    modalServicesOffered.textContent = workerServicesOffered;

                    modalProfileImage.src = profileImage && profileImage.trim() !== ''
                        ? profileImage
                        : `https://api.dicebear.com/9.x/male/svg?seed=${encodeURIComponent(workerName.replace(/\s+/g, ''))}&mouth=smile`;

                    const stars = Math.round(parseFloat(workerRating));
                    let ratingHTML = '';
                    for (let i = 0; i < 5; i++) {
                        ratingHTML += i < stars ? '<i class="fas fa-star"></i>' : '<i class="far fa-star"></i>';
                    }
                    ratingHTML += ` (${workerRating})`;
                    modalRating.innerHTML = ratingHTML;

                    modalCertificateFiles.innerHTML = '';
                    if (certificateFiles.length === 0 || certificateFiles[0] === '') {
                        modalCertificateFiles.innerHTML = '<p>No certificates available.</p>';
                    } else {
                        certificateFiles.forEach(file => {
                            const certElement = document.createElement('div');
                            certElement.innerHTML = `<a href="${file}" class="detail-link" target="_blank">View Certificate</a>`;
                            modalCertificateFiles.appendChild(certElement);
                        });
                    }

                    projectsContainer.innerHTML = '';
                    if (workerProjects.length === 0) {
                        projectsContainer.innerHTML = '<p>No notable projects available.</p>';
                    } else {
                        workerProjects.forEach(project => {
                            const projectElement = document.createElement('div');
                            projectElement.className = 'project';
                            projectElement.innerHTML = `
                                <img src="${project.image || 'https://via.placeholder.com/300x200'}" alt="${project.name}">
                                <div class="project-info">
                                    <h5>${project.name}</h5>
                                    <p><i class="fas fa-calendar"></i> ${project.year}</p>
                                    <p><i class="fas fa-map-marker-alt"></i> ${project.location}</p>
                                    <p>${project.description}</p>
                                </div>
                            `;
                            projectsContainer.appendChild(projectElement);
                        });
                    }

                    modalHireBtn.setAttribute('data-worker-id', workerId);

                    profileModal.style.display = 'flex';
                    setTimeout(() => {
                        profileModal.classList.add('show');
                    }, 10);
                });
            });
        }

        // Hire Modal Functionality
        function initializeHireButtons() {
            hireButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const workerName = button.getAttribute('data-worker');
                    const workerId = button.getAttribute('data-worker-id');
                    hireModalWorkerName.textContent = `Sending hire request to ${workerName}`;
                    hireModalWorkerName.setAttribute('data-worker-id', workerId);
                    hireModal.style.display = 'flex';
                    setTimeout(() => {
                        hireModal.classList.add('show');
                    }, 10);
                });
            });

            const hireForm = document.getElementById('hire-form');
            hireForm.addEventListener('submit', async (e) => {
                e.preventDefault();

                const formData = new FormData(hireForm);
                const workerId = hireModalWorkerName.getAttribute('data-worker-id');
                const data = {
                    position: formData.get('position'),
                    location: formData.get('location'),
                    salary: parseFloat(formData.get('salary')),
                    workerId: workerId
                };

                if (!data.position || !data.location || !data.salary || !data.workerId) {
                    showNotification('Please fill in all fields.', 'error');
                    return;
                }

                try {
                    const response = await fetch('/companytoworker', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.content || ''
                        },
                        body: JSON.stringify(data)
                    });

                    const result = await response.json();

                    if (response.ok) {
                        showNotification(`Hire request sent to ${hireModalWorkerName.textContent.replace('Sending hire request to ', '')} successfully!`, 'success');
                        closeModal(hireModal);
                        hireForm.reset();
                    } else {
                        showNotification('Error: ' + result.error, 'error');
                    }
                } catch (err) {
                    console.error('Error submitting form:', err);
                    showNotification('An error occurred while sending the request.', 'error');
                }
            });

            cancelHireBtn.addEventListener('click', () => {
                closeModal(hireModal);
                hireForm.reset();
            });
        }

        // Toggle Details Buttons Initialization (New Modal)
        function initializeToggleDetailsButtons() {
            toggleDetailsButtons.forEach(button => {
                button.addEventListener('click', (event) => {
                    event.preventDefault();

                    const requestCard = button.closest('.request-card');
                    const fullName = requestCard.getAttribute('data-full-name') || 'Prabhas';
                    const email = requestCard.getAttribute('data-email') || 'prabhas@gmail.com';
                    const location = requestCard.getAttribute('data-location') || 'Hyderabad';
                    const linkedin = requestCard.getAttribute('data-linkedin') || 'https://www.linkedin.com/feed/';
                    const experience = requestCard.getAttribute('data-experience') || '12';
                    const expectedSalary = requestCard.getAttribute('data-expected-salary') || '10000000';
                    const positionApplying = requestCard.getAttribute('data-position-applying') || 'Movie Hero';
                    let primarySkills;
                    try {
                        primarySkills = JSON.parse(requestCard.getAttribute('data-primary-skills') || '["Acting", "Fighting"]');
                    } catch (e) {
                        console.error('Error parsing primary skills:', e);
                        primarySkills = ['Acting', 'Fighting'];
                    }
                    const workExperience = requestCard.getAttribute('data-work-experience') || 'Worked in Baahubali';
                    const resume = requestCard.getAttribute('data-resume') || 'BuildAndBeyond/ah2bhgrmtzsenzkaop5n';
                    const termsAgree = requestCard.getAttribute('data-terms-agree') === 'true';
                    const workerId = requestCard.getAttribute('data-worker-id') || '68ba5ed53f04150099122534';
                    const companyId = requestCard.getAttribute('data-company-id') || '68ba5e733f0415009912252f';
                    const compName = requestCard.getAttribute('data-comp-name') || 'alluarjun constructions';
                    const status = requestCard.getAttribute('data-status') || 'Pending';
                    const createdAt = new Date(requestCard.getAttribute('data-created-at') || '2025-10-11T13:28:31.716+00:00').toLocaleString('en-IN', { timeZone: 'Asia/Kolkata' });
                    const updatedAt = new Date(requestCard.getAttribute('data-updated-at') || '2025-10-11T13:28:31.716+00:00').toLocaleString('en-IN', { timeZone: 'Asia/Kolkata' });
                    const v = requestCard.getAttribute('data-v') || '0';

                    const modalFullName = document.getElementById('details-modal-full-name');
                    const modalEmail = document.getElementById('details-modal-email');
                    const modalLocation = document.getElementById('details-modal-location');
                    const modalLinkedin = document.getElementById('details-modal-linkedin');
                    const modalExperience = document.getElementById('details-modal-experience');
                    const modalExpectedSalary = document.getElementById('details-modal-expected-salary');
                    const modalPositionApplying = document.getElementById('details-modal-position-applying');
                    const modalPrimarySkills = document.getElementById('details-modal-primary-skills');
                    const modalWorkExperience = document.getElementById('details-modal-work-experience');
                    const modalResume = document.getElementById('details-modal-resume');
                    const modalTermsAgree = document.getElementById('details-modal-terms-agree');
                    const modalWorkerId = document.getElementById('details-modal-worker-id');
                    const modalCompanyId = document.getElementById('details-modal-company-id');
                    const modalCompName = document.getElementById('details-modal-comp-name');
                    const modalStatus = document.getElementById('details-modal-status');
                    const modalCreatedAt = document.getElementById('details-modal-created-at');
                    const modalUpdatedAt = document.getElementById('details-modal-updated-at');
                    const modalV = document.getElementById('details-modal-v');
                    const modalProfileImage = document.getElementById('details-modal-profile-image');

                    if (!modalFullName || !modalEmail || !modalLocation || !modalLinkedin || 
                        !modalExperience || !modalExpectedSalary || !modalPositionApplying || 
                        !modalPrimarySkills || !modalWorkExperience || !modalResume || 
                        !modalTermsAgree || !modalWorkerId || !modalCompanyId || 
                        !modalCompName || !modalStatus || !modalCreatedAt || 
                        !modalUpdatedAt || !modalV || !modalProfileImage) {
                        console.error('One or more details modal elements are missing.');
                        showNotification('Error: Unable to display details.', 'error');
                        return;
                    }

                    modalFullName.textContent = fullName;
                    modalEmail.textContent = email;
                    modalLocation.textContent = location;
                    modalLinkedin.innerHTML = `<a href="${linkedin}" target="_blank">${linkedin}</a>`;
                    modalExperience.textContent = `${experience} years`;
                    modalExpectedSalary.textContent = `₹${parseInt(expectedSalary).toLocaleString('en-IN')}`;
                    modalPositionApplying.textContent = positionApplying;
                    modalPrimarySkills.textContent = primarySkills.join(', ');
                    modalWorkExperience.textContent = workExperience;
                    modalResume.innerHTML = `<a href="${resume}" target="_blank">View Resume</a>`;
                    modalTermsAgree.textContent = termsAgree ? 'Yes' : 'No';
                    modalWorkerId.textContent = workerId;
                    modalCompanyId.textContent = companyId;
                    modalCompName.textContent = compName;
                    modalStatus.textContent = status;
                    modalCreatedAt.textContent = createdAt;
                    modalUpdatedAt.textContent = updatedAt;
                    modalV.textContent = v;

                    detailsModal.style.display = 'flex';
                    setTimeout(() => {
                        detailsModal.classList.add('show');
                    }, 10);
                });
            });
        }

        // Initialize action buttons (Accept, Reject)
        function initializeActionButtons() {
            actionButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const requestId = button.getAttribute('data-request-id');
                    const status = button.classList.contains('btn-accept') ? 'accepted' : 'rejected';
                    updateRequestStatus(requestId, status);
                });
            });
        }

        // Update Request Status via AJAX
        function updateRequestStatus(requestId, status) {
            const card = document.querySelector(`button[data-request-id="${requestId}"]`).closest('.request-card');
            const buttons = card.querySelectorAll('button');
            buttons.forEach(btn => btn.disabled = true);

            fetch(`/worker-request/${requestId}`, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.content || ''
                },
                body: JSON.stringify({ status })
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(err => { throw new Error(err.error || 'Network response was not ok') });
                }
                return response.json();
            })
            .then(data => {
                showNotification(data.message || `Request ${status.toLowerCase()} successfully`, 'success');
                card.remove(); 
                if (document.querySelectorAll('.request-card').length === 0) {
                    document.querySelector('.request-list').innerHTML = '<p>No worker requests at this time.</p>';
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification(`Failed to update: ${error.message}`, 'error');
            })
            .finally(() => {
                buttons.forEach(btn => btn.disabled = false);
            });
        }

        // Initialize search and filter functionality
        function initializeSearchAndFilters() {
            searchInputs.forEach(input => {
                input.addEventListener('input', debounce(function() {
                    const searchTerm = this.value.toLowerCase();
                    const currentTab = document.querySelector('.tab.active').getAttribute('data-tab');
                    
                    if (currentTab === 'find-workers') {
                        filterWorkerCards(searchTerm);
                    } else if (currentTab === 'worker-requests') {
                        filterRequestCards(searchTerm);
                    } else if (currentTab === 'requested-workers') {
                        filterTableRows(searchTerm);
                    }
                }, 300));
            });
            
            filterDropdowns.forEach(dropdown => {
                dropdown.addEventListener('change', function() {
                    const filterValue = this.value;
                    const currentTab = document.querySelector('.tab.active').getAttribute('data-tab');
                    
                    if (currentTab === 'find-workers') {
                        filterWorkersBySkill(filterValue);
                    } else if (currentTab === 'requested-workers') {
                        filterWorkersByStatus(filterValue);
                    }
                });
            });
        }

        // Modal events
        function initializeModalEvents() {
            modalCloseButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const modal = button.closest('.modal');
                    closeModal(modal);
                });
            });

            [profileModal, hireModal, detailsModal].forEach(modal => {
                modal.addEventListener('click', (event) => {
                    if (event.target === modal) {
                        closeModal(modal);
                    }
                });

                document.addEventListener('keydown', (event) => {
                    if (event.key === 'Escape' && modal.classList.contains('show')) {
                        closeModal(modal);
                    }
                });
            });

            const modalHireBtn = document.querySelector('.modal-hire-btn');
            if (modalHireBtn) {
                modalHireBtn.addEventListener('click', () => {
                    const workerName = document.getElementById('modal-name').textContent;
                    const workerId = modalHireBtn.getAttribute('data-worker-id');
                    hireModalWorkerName.textContent = `Sending hire request to ${workerName}`;
                    hireModalWorkerName.setAttribute('data-worker-id', workerId);
                    closeModal(profileModal);
                    hireModal.style.display = 'flex';
                    setTimeout(() => {
                        hireModal.classList.add('show');
                    }, 10);
                });
            }

            closeDetailsModalBtn.addEventListener('click', () => {
                closeModal(detailsModal);
            });
        }

        // Close modal function
        function closeModal(modal) {
            modal.classList.remove('show');
            setTimeout(() => {
                modal.style.display = 'none';
            }, 300);
        }

        // Filter worker cards based on search term
        function filterWorkerCards(searchTerm) {
            const workerCards = document.querySelectorAll('#find-workers .worker-card');
            
            workerCards.forEach(card => {
                const name = card.querySelector('h3').textContent.toLowerCase();
                const skills = Array.from(card.querySelectorAll('.tag')).map(tag => tag.textContent.toLowerCase());
                const email = card.querySelector('.email')?.textContent.toLowerCase() || '';
                
                if (name.includes(searchTerm) || 
                    skills.some(skill => skill.includes(searchTerm)) || 
                    email.includes(searchTerm)) {
                    card.style.display = 'flex';
                } else {
                    card.style.display = 'none';
                }
            });
        }

        // Filter worker cards based on skill
        function filterWorkersBySkill(skill) {
            const workerCards = document.querySelectorAll('#find-workers .worker-card');
            
            workerCards.forEach(card => {
                const skills = Array.from(card.querySelectorAll('.tag')).map(tag => tag.textContent.toLowerCase());
                
                if (skill === 'all' || skills.some(s => s.toLowerCase() === skill.toLowerCase())) {
                    card.style.display = 'flex';
                } else {
                    card.style.display = 'none';
                }
            });
        }

        // Filter request cards based on search term
        function filterRequestCards(searchTerm) {
            const requestCards = document.querySelectorAll('#worker-requests .request-card');
            
            requestCards.forEach(card => {
                const name = card.querySelector('h3').textContent.toLowerCase();
                const role = card.querySelector('.detail-value').textContent.toLowerCase();
                const location = card.querySelectorAll('.detail-value')[2]?.textContent.toLowerCase() || '';
                
                if (name.includes(searchTerm) || 
                    role.includes(searchTerm) || 
                    location.includes(searchTerm)) {
                    card.style.display = 'flex';
                } else {
                    card.style.display = 'none';
                }
            });
        }

        // Filter table rows based on search term
        function filterTableRows(searchTerm) {
            const tableRows = document.querySelectorAll('#requested-workers tbody tr');
            
            tableRows.forEach(row => {
                const cells = row.querySelectorAll('td');
                const rowText = Array.from(cells).map(cell => cell.textContent.toLowerCase()).join(' ');
                
                if (rowText.includes(searchTerm)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        // Filter table rows based on status
        function filterWorkersByStatus(status) {
            const tableRows = document.querySelectorAll('#requested-workers tbody tr');
            
            tableRows.forEach(row => {
                const statusCell = row.querySelector('.status');
                const workerStatus = statusCell.textContent.toLowerCase();
                
                if (status === 'all' || workerStatus === status.toLowerCase()) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        function initializeWorkerCards() {

        }

        function debounce(func, delay) {
            let timeout;
            return function() {
                const context = this;
                const args = arguments;
                clearTimeout(timeout);
                timeout = setTimeout(() => func.apply(context, args), delay);
            };
        }
    </script>
</body>
</html>