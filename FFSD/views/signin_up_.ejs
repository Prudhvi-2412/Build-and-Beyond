<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Build & Beyond</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <style>
        :root {
            --primary-blue: #4F46E5;
            --primary-blue-dark: #3730A3;
            --primary-blue-light: #6366F1;
            --text-primary: #1F2937;
            --text-secondary: #6B7280;
            --text-light: #9CA3AF;
            --surface-white: #FFFFFF;
            --surface-gray: #F9FAFB;
            --surface-light: #F3F4F6;
            --border-light: #E5E7EB;
            --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
            --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
            --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
            --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
            --error-red: #EF4444;
            --success-green: #10B981;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 2rem;
            position: relative;
        }

        /* Admin Login Link Styles */
        .admin-link {
            position: absolute;
            top: 2rem;
            right: 2rem;
            z-index: 100;
        }

        .admin-login-btn {
            background: rgba(255, 255, 255, 0.15);
            color: white;
            padding: 0.75rem 1.5rem;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 25px;
            text-decoration: none;
            font-size: 0.9rem;
            font-weight: 500;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            backdrop-filter: blur(10px);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .admin-login-btn:hover {
            background: rgba(255, 255, 255, 0.25);
            border-color: rgba(255, 255, 255, 0.5);
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }

        .admin-login-btn::before {
            content: 'üë®‚Äçüíº';
            font-size: 0.9rem;
        }

        .main-container {
            max-width: 1400px;
            width: 100%;
            display: grid;
            grid-template-columns: 1fr 550px;
            gap: 4rem;
            align-items: center;
        }

        .hero-content {
            color: white;
        }

        .hero-content h1 {
            font-size: 4rem;
            font-weight: 700;
            line-height: 1.1;
            margin-bottom: 1.5rem;
            background: linear-gradient(135deg, #ffffff 0%, #e0e7ff 100%);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .hero-content p {
            font-size: 1.25rem;
            line-height: 1.7;
            margin-bottom: 2.5rem;
            color: rgba(255, 255, 255, 0.9);
            max-width: 600px;
        }

        .btn-container {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .btn {
            padding: 1rem 2rem;
            border: none;
            border-radius: 12px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        .btn-primary {
            background: var(--surface-white);
            color: var(--primary-blue);
            box-shadow: var(--shadow-lg);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-xl);
        }

        .btn-secondary {
            background: rgba(255, 255, 255, 0.1);
            color: white;
            border: 2px solid rgba(255, 255, 255, 0.3);
            backdrop-filter: blur(10px);
        }

        .btn-secondary:hover {
            background: rgba(255, 255, 255, 0.2);
            border-color: rgba(255, 255, 255, 0.5);
            transform: translateY(-2px);
        }

        /* Enhanced Auth Form Card */
        .auth-card {
            background: var(--surface-white);
            border-radius: 24px;
            box-shadow: var(--shadow-xl);
            overflow: hidden;
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            max-height: 90vh;
            overflow-y: auto;
        }

        .auth-tabs {
            display: flex;
            background: var(--surface-light);
            padding: 0.5rem;
            margin: 1.5rem;
            border-radius: 12px;
        }

        .tab-button {
            flex: 1;
            padding: 0.75rem 1rem;
            border: none;
            background: transparent;
            font-size: 0.95rem;
            font-weight: 600;
            color: var(--text-secondary);
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .tab-button.active {
            background: var(--primary-blue);
            color: white;
            box-shadow: var(--shadow-sm);
        }

        .auth-content {
            padding: 0 1.5rem 1.5rem 1.5rem;
        }

        .form-content {
            display: none;
        }

        .form-content.active {
            display: block;
            animation: fadeInUp 0.4s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .form-header {
            text-align: center;
            margin-bottom: 1.5rem;
        }

        .form-header h2 {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--text-primary);
            margin-bottom: 0.5rem;
        }

        .form-header p {
            color: var(--text-secondary);
            font-size: 0.9rem;
        }

        .form-group {
            margin-bottom: 1.25rem;
            position: relative;
        }

        .form-group label {
            display: block;
            font-size: 0.85rem;
            font-weight: 500;
            color: var(--text-primary);
            margin-bottom: 0.4rem;
        }

        .form-input, .form-control, select {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 2px solid var(--border-light);
            border-radius: 8px;
            font-size: 0.9rem;
            background: var(--surface-white);
            transition: all 0.3s ease;
            outline: none;
        }

        .form-input:focus, .form-control:focus, select:focus {
            border-color: var(--primary-blue);
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
        }

        .form-input.error, .form-control.error {
            border-color: var(--error-red);
            background: #FEF2F2;
        }

        .error-message, .validation-error {
            color: var(--error-red);
            font-size: 0.75rem;
            margin-top: 0.3rem;
            min-height: 1rem;
            position: absolute;
            left: 0;
            bottom: -1rem;
        }

        /* Two Column Layout for Signup */
        .signup-columns {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }

        .signup-left, .signup-right {
            display: flex;
            flex-direction: column;
        }

        .user-type-selection {
            grid-column: 1 / -1;
            margin-bottom: 1rem;
        }

        .password-section {
            grid-column: 1 / -1;
        }

        .terms-section {
            grid-column: 1 / -1;
            margin-top: 1rem;
        }

        /* Form Display States */
        .customer-fields,
        .company-fields,
        .worker-fields,
        .common-password-fields {
            display: none;
        }

        .customer-fields.active,
        .company-fields.active,
        .worker-fields.active,
        .common-password-fields.active {
            display: contents;
        }

        /* File Upload Styles */
        .file-upload-container {
            grid-column: 1 / -1;
        }

        .file-input-wrapper {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-top: 0.5rem;
            flex-wrap: wrap;
        }

        .file-upload-btn {
            background: var(--surface-light);
            color: var(--text-secondary);
            padding: 0.6rem 1rem;
            border: 2px solid var(--border-light);
            border-radius: 8px;
            cursor: pointer;
            font-size: 0.85rem;
            transition: all 0.3s ease;
            white-space: nowrap;
        }

        .file-upload-btn:hover {
            background: var(--border-light);
            border-color: var(--primary-blue);
        }

        .file-name {
            font-size: 0.8rem;
            color: var(--text-secondary);
            flex: 1;
            min-width: 120px;
        }

        input[type="file"] {
            position: absolute;
            width: 0.1px;
            height: 0.1px;
            opacity: 0;
            overflow: hidden;
            z-index: -1;
        }

        .form-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .checkbox-container {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .checkbox-container input[type="checkbox"] {
            width: 16px;
            height: 16px;
            accent-color: var(--primary-blue);
        }

        .checkbox-container label {
            font-size: 0.85rem;
            color: var(--text-secondary);
            margin-bottom: 0;
        }

        .forgot-link {
            color: var(--primary-blue);
            text-decoration: none;
            font-size: 0.85rem;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .forgot-link:hover {
            text-decoration: underline;
            color: var(--primary-blue-dark);
        }

        .submit-btn {
            width: 100%;
            padding: 0.9rem;
            background: linear-gradient(135deg, var(--primary-blue), var(--primary-blue-light));
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 0.95rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .submit-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.6s;
        }

        .submit-btn:hover::before {
            left: 100%;
        }

        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }

        .submit-btn:active {
            transform: translateY(0);
        }

        .submit-btn.loading {
            opacity: 0.8;
            cursor: not-allowed;
            color: transparent;
        }

        .submit-btn.loading::after {
            content: '';
            position: absolute;
            right: 50%;
            top: 50%;
            width: 20px;
            height: 20px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            transform: translate(50%, -50%);
        }

        @keyframes spin {
            0% { transform: translate(50%, -50%) rotate(0deg); }
            100% { transform: translate(50%, -50%) rotate(360deg); }
        }

        .toggle-form {
            text-align: center;
            margin-top: 1.5rem;
            color: var(--text-secondary);
            font-size: 0.9rem;
        }

        .toggle-form a {
            color: var(--primary-blue);
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .toggle-form a:hover {
            color: var(--primary-blue-dark);
            text-decoration: underline;
        }

        /* Modal Styles for Forgot Password */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.6);
            align-items: center;
            justify-content: center;
            z-index: 1000;
            animation: fadeIn 0.3s ease-in-out;
        }

        .modal-content {
            background: var(--surface-white);
            padding: 2rem;
            border-radius: 16px;
            width: 100%;
            max-width: 450px;
            box-shadow: var(--shadow-xl);
            position: relative;
            animation: slideUp 0.3s ease-in-out;
            margin: 0 1rem;
        }

        .close-btn {
            position: absolute;
            top: 1rem;
            right: 1rem;
            font-size: 1.5rem;
            color: var(--text-secondary);
            cursor: pointer;
            transition: color 0.3s ease;
            background: none;
            border: none;
        }

        .close-btn:hover {
            color: var(--primary-blue);
        }

        .modal-header {
            margin-bottom: 1.5rem;
            text-align: center;
        }

        .modal-header h2 {
            color: var(--primary-blue);
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .modal-header p {
            color: var(--text-secondary);
            font-size: 0.9rem;
        }

        .otp-container {
            display: flex;
            gap: 0.75rem;
            justify-content: center;
            margin: 1rem 0;
        }

        .otp-input {
            width: 45px;
            height: 45px;
            text-align: center;
            font-size: 1.1rem;
            border: 2px solid var(--border-light);
            border-radius: 8px;
            transition: border-color 0.3s ease;
        }

        .otp-input:focus {
            border-color: var(--primary-blue);
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
            outline: none;
        }

        .resend-link {
            color: var(--primary-blue);
            text-decoration: none;
            font-size: 0.85rem;
            font-weight: 500;
            display: inline-block;
            margin-top: 1rem;
            transition: color 0.3s ease;
        }

        .resend-link:hover {
            color: var(--primary-blue-dark);
            text-decoration: underline;
        }

        .resend-link.disabled {
            color: var(--text-light);
            pointer-events: none;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideUp {
            from { transform: translateY(50px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .main-container {
                grid-template-columns: 1fr 500px;
                gap: 3rem;
            }
            
            .hero-content h1 {
                font-size: 3.5rem;
            }
        }

        @media (max-width: 992px) {
            .main-container {
                grid-template-columns: 1fr;
                gap: 3rem;
                text-align: center;
            }
            
            .auth-card {
                max-width: 550px;
                margin: 0 auto;
            }
            
            .signup-columns {
                grid-template-columns: 1fr;
                gap: 0;
            }
            
            .user-type-selection,
            .password-section,
            .terms-section,
            .file-upload-container {
                grid-column: 1;
            }
        }

        @media (max-width: 768px) {
            body {
                padding: 1rem;
            }
            
            .hero-content h1 {
                font-size: 2.5rem;
            }
            
            .hero-content p {
                font-size: 1.1rem;
            }
            
            .btn-container {
                flex-direction: column;
                align-items: center;
            }
            
            .btn {
                width: 100%;
                max-width: 300px;
            }
            
            .form-footer {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .auth-card {
                max-height: 85vh;
            }
        }

        @media (max-width: 480px) {
            .main-container {
                gap: 2rem;
            }
            
            .hero-content h1 {
                font-size: 2rem;
            }
            
            .auth-content {
                padding: 0 1rem 1rem 1rem;
            }
            
            .otp-container {
                gap: 0.5rem;
            }
            
            .otp-input {
                width: 40px;
                height: 40px;
                font-size: 1rem;
            }
        }
    </style>
</head>
<body>

    <div class="admin-link">
        <a href="/adminpage" class="admin-login-btn">
            Admin Login
        </a>
    </div>
    <div class="main-container">
        <div class="hero-content">
            <h1>Welcome to Build & Beyond</h1>
            <p>
                Your one-stop platform for finding skilled professionals for home repairs, renovations, and construction projects. Whether you need a handyman, contractor, or specialist, we connect you with trusted experts to bring your vision to life!
            </p>
            <div class="btn-container">
                <button class="btn btn-primary" onclick="switchTab('signup')">Learn More</button>
                <button class="btn btn-secondary" onclick="switchTab('signup')">Get Started</button>
            </div>
        </div>
        
        <div class="auth-card">
            <div class="auth-tabs">
                <button class="tab-button active" id="signin-tab" onclick="switchTab('signin')">
                    Sign In
                </button>
                <button class="tab-button" id="signup-tab" onclick="switchTab('signup')">
                    Sign Up
                </button>
            </div>
            
            <div class="auth-content">
                <!-- Sign In Form -->
                <div class="form-content active" id="signin-form">
                    <div class="form-header">
                        <h2>Welcome Back</h2>
                        <p>Enter your credentials to access your account</p>
                    </div>
                    
                    <form onsubmit="handleSignIn(event)">
                        <div class="form-group">
                            <label for="signin-email">Email Address</label>
                            <input 
                                type="email" 
                                id="signin-email" 
                                class="form-input" 
                                placeholder="your@email.com" 
                                required
                            >
                            <div class="error-message" id="signin-email-error"></div>
                        </div>
                        
                        <div class="form-group">
                            <label for="signin-password">Password</label>
                            <input 
                                type="password" 
                                id="signin-password" 
                                class="form-input" 
                                placeholder="Enter your password" 
                                required
                            >
                            <div class="error-message" id="signin-password-error"></div>
                        </div>
                        
                        <div class="form-footer">
                            <div class="checkbox-container">
                                <input type="checkbox" id="remember-me">
                                <label for="remember-me">Remember me</label>
                            </div>
                            <a href="#" class="forgot-link" id="forgot-password-link">Forgot Password?</a>
                        </div>
                        
                        <button type="submit" class="submit-btn" id="signin-submit">
                            Sign In
                        </button>
                    </form>
                </div>
                
                <!-- Enhanced Sign Up Form -->
                <div class="form-content" id="signup-form">
                    <div class="form-header">
                        <h2>Create Account</h2>
                        <p>Join Build & Beyond today</p>
                    </div>
                    
                    <form onsubmit="handleSignUp(event)">
                        <div class="signup-columns">
                            <!-- User Type Selection (Full Width) -->
                            <div class="form-group user-type-selection">
                                <label for="user-type">User Type</label>
                                <select id="user-type" class="form-control" required>
                                    <option value="">Select User Type</option>
                                    <option value="customer">Customer</option>
                                    <option value="company">Company</option>
                                    <option value="worker">Professional</option>
                                </select>
                                <div class="validation-error" id="user-type-error"></div>
                            </div>

                            <!-- Customer Fields -->
                            <div class="customer-fields" id="customer-fields">
                                <div class="form-group">
                                    <label for="customer-name">Full Name</label>
                                    <input type="text" id="customer-name" class="form-control" placeholder="Your Full Name">
                                    <div class="validation-error" id="customer-name-error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="customer-email">Email Address</label>
                                    <input type="email" id="customer-email" class="form-control" placeholder="your@email.com">
                                    <div class="validation-error" id="customer-email-error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="customer-dob">Date of Birth</label>
                                    <input type="date" id="customer-dob" class="form-control">
                                    <div class="validation-error" id="customer-dob-error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="customer-phone">Phone Number</label>
                                    <input type="tel" id="customer-phone" class="form-control" placeholder="Your Phone Number">
                                    <div class="validation-error" id="customer-phone-error"></div>
                                </div>
                            </div>

                            <!-- Company Fields -->
                            <div class="company-fields" id="company-fields">
                                <div class="form-group">
                                    <label for="company-name">Company Name</label>
                                    <input type="text" id="company-name" class="form-control" placeholder="Your Company Name">
                                    <div class="validation-error" id="company-name-error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="contact-person">Contact Person</label>
                                    <input type="text" id="contact-person" class="form-control" placeholder="Contact Person Name">
                                    <div class="validation-error" id="contact-person-error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="company-email">Email Address</label>
                                    <input type="email" id="company-email" class="form-control" placeholder="company@email.com">
                                    <div class="validation-error" id="company-email-error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="company-phone">Phone Number</label>
                                    <input type="tel" id="company-phone" class="form-control" placeholder="Company Phone">
                                    <div class="validation-error" id="company-phone-error"></div>
                                </div>
                            </div>

                            <!-- Worker Fields -->
                            <div class="worker-fields" id="worker-fields">
                                <div class="form-group">
                                    <label for="worker-name">Full Name</label>
                                    <input type="text" id="worker-name" class="form-control" placeholder="Your Full Name">
                                    <div class="validation-error" id="worker-name-error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="worker-dob">Date of Birth</label>
                                    <input type="date" id="worker-dob" class="form-control">
                                    <div class="validation-error" id="worker-dob-error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="worker-email">Email Address</label>
                                    <input type="email" id="worker-email" class="form-control" placeholder="your@email.com">
                                    <div class="validation-error" id="worker-email-error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="aadhar-number">Aadhar Number</label>
                                    <input type="text" id="aadhar-number" class="form-control" placeholder="12-digit Aadhar Number" maxlength="12">
                                    <div class="validation-error" id="aadhar-number-error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="worker-phone">Phone Number</label>
                                    <input type="tel" id="worker-phone" class="form-control" placeholder="Your Phone Number">
                                    <div class="validation-error" id="worker-phone-error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="specialization">Specialization</label>
                                    <select id="specialization" class="form-control">
                                        <option value="">Select Specialization</option>
                                        <option value="architect">Architect</option>
                                        <option value="interiordesign">Interior Design</option>
                                        <option value="contractor">Contractor</option>
                                        <option value="electrician">Electrician</option>
                                        <option value="plumber">Plumber</option>
                                        <option value="carpenter">Carpenter</option>
                                    </select>
                                    <div class="validation-error" id="specialization-error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="experience">Experience (Years)</label>
                                    <input type="number" id="experience" class="form-control" placeholder="Years of Experience" min="0">
                                    <div class="validation-error" id="experience-error"></div>
                                </div>
                            </div>
                            
                            <!-- File Upload for Company Documents -->
                            <div class="form-group file-upload-container" id="company-file-upload" style="display: none;">
                                <label for="company-documents">Company License Upload</label>
                                <div class="file-input-wrapper">
                                    <button type="button" class="file-upload-btn">Choose Files</button>
                                    <span class="file-name" id="company-file-name-display">No files selected</span>
                                    <input type="file" id="company-documents" multiple>
                                </div>
                                <div class="validation-error" id="company-documents-error"></div>
                            </div>
                            
                            <!-- File Upload for Worker Certificates -->
                            <div class="form-group file-upload-container" id="worker-file-upload" style="display: none;">
                                <label for="worker-documents">Certificates/Licenses Upload</label>
                                <div class="file-input-wrapper">
                                    <button type="button" class="file-upload-btn">Choose Files</button>
                                    <span class="file-name" id="worker-file-name-display">No files selected</span>
                                    <input type="file" id="worker-documents" multiple>
                                </div>
                                <div class="validation-error" id="worker-documents-error"></div>
                            </div>

                            <!-- Password Section (Full Width) -->
                            <div class="common-password-fields password-section" id="common-password-fields">
                                <div class="form-group">
                                    <label for="signup-password">Password</label>
                                    <input type="password" id="signup-password" class="form-control" placeholder="Create a password">
                                    <div class="validation-error" id="signup-password-error"></div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="signup-confirm-password">Confirm Password</label>
                                    <input type="password" id="signup-confirm-password" class="form-control" placeholder="Confirm your password">
                                    <div class="validation-error" id="signup-confirm-password-error"></div>
                                </div>
                            </div>

                            <!-- Terms and Conditions (Full Width) -->
                            <div class="form-group terms-section" id="terms-section" style="display: none;">
                                <div class="checkbox-container">
                                    <input type="checkbox" id="signup-terms" required>
                                    <label for="signup-terms">
                                        I agree to the <a href="#" class="forgot-link">Terms and Conditions</a>
                                    </label>
                                </div>
                                <div class="validation-error" id="signup-terms-error"></div>
                            </div>
                        </div>
                        
                        <button type="submit" class="submit-btn" id="signup-submit">
                            Create Account
                        </button>
                    </form>
                    
                    <div class="toggle-form">
                        Already have an account? <a href="#" onclick="switchTab('signin')">Sign In</a>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Forgot Password Modal -->
        <div class="modal" id="forgot-password-modal">
            <div class="modal-content">
                <button class="close-btn" id="close-forgot-modal">√ó</button>
                <form id="forgot-password-form">
                    <div class="modal-header">
                        <h2>Reset Password</h2>
                        <p>Enter your email to receive a verification code</p>
                    </div>

                    <!-- Email Input -->
                    <div class="form-group" id="email-step">
                        <label for="forgot-email">Email Address</label>
                        <input type="email" id="forgot-email" class="form-control" placeholder="your@email.com" required>
                        <button type="button" class="submit-btn" id="send-otp" style="margin-top: 1rem;">Send Code</button>
                    </div>

                    <!-- OTP Input -->
                    <div class="form-group" id="otp-step" style="display: none;">
                        <label for="otp">Enter Verification Code</label>
                        <div class="otp-container">
                            <input type="text" class="otp-input" maxlength="1">
                            <input type="text" class="otp-input" maxlength="1">
                            <input type="text" class="otp-input" maxlength="1">
                            <input type="text" class="otp-input" maxlength="1">
                        </div>
                        <button type="button" class="submit-btn" id="verify-otp" style="margin-top: 1rem;">Verify Code</button>
                        <a href="#" class="resend-link" id="resend-otp">Resend Code</a>
                    </div>

                    <!-- New Password Input -->
                    <div class="form-group" id="password-step" style="display: none;">
                        <label for="new-password">New Password</label>
                        <input type="password" id="new-password" class="form-control" placeholder="Enter new password" style="margin-bottom: 1rem;">
                        <label for="confirm-new-password">Confirm Password</label>
                        <input type="password" id="confirm-new-password" class="form-control" placeholder="Confirm new password">
                        <button type="submit" class="submit-btn" id="reset-password-btn" style="margin-top: 1rem;">Reset Password</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // State management
        let generatedOTP = '';
        let resendTimeout = null;

        // Utility functions
        function validateEmail(email) {
            const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return re.test(email);
        }

        function displayError(inputId, message) {
            const errorElement = document.getElementById(inputId + '-error');
            if (errorElement) {
                errorElement.textContent = message;
                const inputElement = document.getElementById(inputId);
                if (inputElement) {
                    inputElement.classList.add('error');
                }
            }
        }

        function clearError(inputId) {
            const errorElement = document.getElementById(inputId + '-error');
            if (errorElement) {
                errorElement.textContent = '';
                const inputElement = document.getElementById(inputId);
                if (inputElement) {
                    inputElement.classList.remove('error');
                }
            }
        }

        function clearAllErrors() {
            const errorElements = document.querySelectorAll('.error-message, .validation-error');
            const inputElements = document.querySelectorAll('.form-input.error, .form-control.error');
            errorElements.forEach(el => el.textContent = '');
            inputElements.forEach(el => el.classList.remove('error'));
        }

        function toggleLoading(button, isLoading) {
            if (isLoading) {
                button.classList.add('loading');
                button.disabled = true;
            } else {
                button.classList.remove('loading');
                button.disabled = false;
            }
        }

        // Tab switching functionality
        function switchTab(tabName) {
            document.querySelectorAll('.tab-button').forEach(tab => {
                tab.classList.remove('active');
            });
            document.querySelectorAll('.form-content').forEach(content => {
                content.classList.remove('active');
            });
            
            document.getElementById(tabName + '-tab').classList.add('active');
            document.getElementById(tabName + '-form').classList.add('active');
            
            clearAllErrors();
            
            if (tabName === 'signup') {
                resetSignupForm();
            }
        }

        // User type selection handler
        document.getElementById('user-type').addEventListener('change', function() {
            const userType = this.value;
            
            // Hide all field groups
            document.getElementById('customer-fields').classList.remove('active');
            document.getElementById('company-fields').classList.remove('active');
            document.getElementById('worker-fields').classList.remove('active');
            document.getElementById('common-password-fields').classList.remove('active');
            document.getElementById('company-file-upload').style.display = 'none';
            document.getElementById('worker-file-upload').style.display = 'none';
            document.getElementById('terms-section').style.display = 'none';
            
            if (userType === 'customer') {
                document.getElementById('customer-fields').classList.add('active');
                document.getElementById('common-password-fields').classList.add('active');
                document.getElementById('terms-section').style.display = 'block';
            } else if (userType === 'company') {
                document.getElementById('company-fields').classList.add('active');
                document.getElementById('common-password-fields').classList.add('active');
                document.getElementById('company-file-upload').style.display = 'block';
                document.getElementById('terms-section').style.display = 'block';
            } else if (userType === 'worker') {
                document.getElementById('worker-fields').classList.add('active');
                document.getElementById('common-password-fields').classList.add('active');
                document.getElementById('worker-file-upload').style.display = 'block';
                document.getElementById('terms-section').style.display = 'block';
            }
            
            clearAllErrors();
        });

        // File upload handlers
        document.querySelectorAll('.file-upload-btn').forEach(button => {
            button.addEventListener('click', function() {
                const fileInput = this.closest('.file-input-wrapper').querySelector('input[type="file"]');
                if (fileInput) {
                    fileInput.click();
                }
            });
        });

        document.getElementById('company-documents').addEventListener('change', function(e) {
            const fileCount = e.target.files.length;
            document.getElementById('company-file-name-display').textContent = 
                fileCount > 0 ? `${fileCount} file(s) selected` : 'No files selected';
        });

        document.getElementById('worker-documents').addEventListener('change', function(e) {
            const fileCount = e.target.files.length;
            document.getElementById('worker-file-name-display').textContent = 
                fileCount > 0 ? `${fileCount} file(s) selected` : 'No files selected';
        });

        // Reset signup form
        function resetSignupForm() {
            document.getElementById('user-type').value = '';
            document.getElementById('customer-fields').classList.remove('active');
            document.getElementById('company-fields').classList.remove('active');
            document.getElementById('worker-fields').classList.remove('active');
            document.getElementById('common-password-fields').classList.remove('active');
            document.getElementById('company-file-upload').style.display = 'none';
            document.getElementById('worker-file-upload').style.display = 'none';
            document.getElementById('terms-section').style.display = 'none';
            document.getElementById('company-file-name-display').textContent = 'No files selected';
            document.getElementById('worker-file-name-display').textContent = 'No files selected';
            clearAllErrors();
        }

        // Sign In Handler - BACKEND INTEGRATION
        function handleSignIn(event) {
            event.preventDefault();
            let isValid = true;
            
            const email = document.getElementById('signin-email').value;
            const password = document.getElementById('signin-password').value;
            const submitBtn = document.getElementById('signin-submit');
            
            clearError('signin-email');
            clearError('signin-password');
            
            if (!email) {
                displayError('signin-email', 'Email is required');
                isValid = false;
            } else if (!validateEmail(email)) {
                displayError('signin-email', 'Please enter a valid email address');
                isValid = false;
            }
            
            if (!password) {
                displayError('signin-password', 'Password is required');
                isValid = false;
            } else if (password.length < 6) {
                displayError('signin-password', 'Password must be at least 6 characters');
                isValid = false;
            }
            
            if (isValid) {
                toggleLoading(submitBtn, true);
                
                // Make API call to your backend
                fetch('http://localhost:4000/login', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email, password }),
                    credentials: 'include'
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    toggleLoading(submitBtn, false);
                    if (data.redirect) {
                        showMessageBox('Login successful! Redirecting...', 'success');
                        setTimeout(() => {
                            window.location.href = data.redirect;
                        }, 1000);
                    } else if (data.message) {
                        showMessageBox(data.message, data.message.toLowerCase().includes('success') ? 'success' : 'error');
                    } else {
                        showMessageBox('Login failed. Please check your credentials.', 'error');
                    }
                })
                .catch(error => {
                    toggleLoading(submitBtn, false);
                    console.error('Login Error:', error);
                    
                    if (error.message.includes('Failed to fetch')) {
                        showMessageBox('Cannot connect to server. Please make sure your backend is running on localhost:4000', 'error');
                    } else {
                        showMessageBox('Login failed. Please check your credentials and try again.', 'error');
                    }
                });
            }
        }

        // Sign Up Handler - UPDATED TO USE YOUR BACKEND
        function handleSignUp(event) {
            event.preventDefault();
            let isValid = true;
            
            const userType = document.getElementById('user-type').value;
            const submitBtn = document.getElementById('signup-submit');
            
            clearAllErrors();
            
            if (!userType) {
                displayError('user-type', 'Please select a user type');
                isValid = false;
            }
            
            if (userType === 'customer') {
                isValid = validateCustomerFields() && isValid;
            } else if (userType === 'company') {
                isValid = validateCompanyFields() && isValid;
            } else if (userType === 'worker') {
                isValid = validateWorkerFields() && isValid;
            }
            
            if (userType) {
                isValid = validatePasswordFields() && isValid;
                isValid = validateTerms() && isValid;
            }
            
            if (isValid) {
                const formData = {
                    role: userType,
                    password: document.getElementById('signup-password').value,
                    termsAccepted: document.getElementById('signup-terms').checked
                };

                if (userType === 'customer') {
                    formData.name = document.getElementById('customer-name').value;
                    formData.email = document.getElementById('customer-email').value;
                    formData.dob = document.getElementById('customer-dob').value;
                    formData.phone = document.getElementById('customer-phone').value;
                } else if (userType === 'company') {
                    formData.companyName = document.getElementById('company-name').value;
                    formData.contactPerson = document.getElementById('contact-person').value;
                    formData.email = document.getElementById('company-email').value;
                    formData.phone = document.getElementById('company-phone').value;
                    const companyFiles = document.getElementById('company-documents').files;
                    if (companyFiles.length > 0) {
                        formData.companyDocuments = Array.from(companyFiles).map(file => file.name);
                    }
                } else if (userType === 'worker') {
                    formData.name = document.getElementById('worker-name').value;
                    formData.dob = document.getElementById('worker-dob').value;
                    formData.email = document.getElementById('worker-email').value;
                    formData.aadharNumber = document.getElementById('aadhar-number').value;
                    formData.phone = document.getElementById('worker-phone').value;
                    formData.specialization = document.getElementById('specialization').value;
                    formData.experience = document.getElementById('experience').value;
                    const workerFiles = document.getElementById('worker-documents').files;
                    if (workerFiles.length > 0) {
                        formData.workerDocuments = Array.from(workerFiles).map(file => file.name);
                    }
                }

                toggleLoading(submitBtn, true);
                
                // Make actual API call to your backend
                fetch('http://localhost:4000/signup', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(formData)
                })
                .then(response => response.json())
                .then(data => {
                    toggleLoading(submitBtn, false);
                    if (data.message === "Signup successful") {
                        showMessageBox('Account created successfully! Please login with your credentials.', 'success');
                        event.target.reset();
                        switchTab('signin');
                    } else {
                        showMessageBox(data.message || 'Signup failed. Please try again.', 'error');
                    }
                })
                .catch(error => {
                    toggleLoading(submitBtn, false);
                    console.error('Error:', error);
                    showMessageBox('An error occurred during signup. Please try again.', 'error');
                });
            }
        }

        // Validation functions
        function validateCustomerFields() {
            let isValid = true;
            
            const name = document.getElementById('customer-name').value;
            const email = document.getElementById('customer-email').value;
            const dob = document.getElementById('customer-dob').value;
            const phone = document.getElementById('customer-phone').value;
            
            if (!name.trim()) {
                displayError('customer-name', 'Full name is required');
                isValid = false;
            }
            
            if (!validateEmail(email)) {
                displayError('customer-email', 'Please enter a valid email address');
                isValid = false;
            }
            
            if (!dob) {
                displayError('customer-dob', 'Date of birth is required');
                isValid = false;
            } else {
                const dobDate = new Date(dob);
                const today = new Date();
                const age = today.getFullYear() - dobDate.getFullYear();
                if (age < 18) {
                    displayError('customer-dob', 'You must be at least 18 years old');
                    isValid = false;
                }
            }
            
            if (!phone.trim()) {
                displayError('customer-phone', 'Phone number is required');
                isValid = false;
            }
            
            return isValid;
        }

        function validateCompanyFields() {
            let isValid = true;
            
            const companyName = document.getElementById('company-name').value;
            const contactPerson = document.getElementById('contact-person').value;
            const email = document.getElementById('company-email').value;
            const phone = document.getElementById('company-phone').value;
            
            if (!companyName.trim()) {
                displayError('company-name', 'Company name is required');
                isValid = false;
            }
            
            if (!contactPerson.trim()) {
                displayError('contact-person', 'Contact person is required');
                isValid = false;
            }
            
            if (!validateEmail(email)) {
                displayError('company-email', 'Please enter a valid email address');
                isValid = false;
            }
            
            if (!phone.trim()) {
                displayError('company-phone', 'Phone number is required');
                isValid = false;
            }
            
            return isValid;
        }

        function validateWorkerFields() {
            let isValid = true;
            
            const name = document.getElementById('worker-name').value;
            const dob = document.getElementById('worker-dob').value;
            const email = document.getElementById('worker-email').value;
            const aadhar = document.getElementById('aadhar-number').value;
            const phone = document.getElementById('worker-phone').value;
            const specialization = document.getElementById('specialization').value;
            
            if (!name.trim()) {
                displayError('worker-name', 'Full name is required');
                isValid = false;
            }
            
            if (!dob) {
                displayError('worker-dob', 'Date of birth is required');
                isValid = false;
            } else {
                const dobDate = new Date(dob);
                const today = new Date();
                const age = today.getFullYear() - dobDate.getFullYear();
                if (age < 18) {
                    displayError('worker-dob', 'You must be at least 18 years old');
                    isValid = false;
                }
            }
            
            if (!validateEmail(email)) {
                displayError('worker-email', 'Please enter a valid email address');
                isValid = false;
            }
            
            if (!aadhar.trim()) {
                displayError('aadhar-number', 'Aadhar number is required');
                isValid = false;
            } else if (!/^\d{12}$/.test(aadhar)) {
                displayError('aadhar-number', 'Please enter a valid 12-digit Aadhar number');
                isValid = false;
            }
            
            if (!phone.trim()) {
                displayError('worker-phone', 'Phone number is required');
                isValid = false;
            }
            
            if (!specialization) {
                displayError('specialization', 'Please select a specialization');
                isValid = false;
            }
            
            return isValid;
        }

        function validatePasswordFields() {
            let isValid = true;
            
            const password = document.getElementById('signup-password').value;
            const confirmPassword = document.getElementById('signup-confirm-password').value;
            
            if (password.length < 6) {
                displayError('signup-password', 'Password must be at least 6 characters');
                isValid = false;
            } else if (!/[A-Z]/.test(password)) {
                displayError('signup-password', 'Password must contain at least one uppercase letter');
                isValid = false;
            } else if (!/[0-9]/.test(password)) {
                displayError('signup-password', 'Password must contain at least one number');
                isValid = false;
            }
            
            if (!confirmPassword) {
                displayError('signup-confirm-password', 'Please confirm your password');
                isValid = false;
            } else if (password !== confirmPassword) {
                displayError('signup-confirm-password', 'Passwords do not match');
                isValid = false;
            }
            
            return isValid;
        }

        function validateTerms() {
            const terms = document.getElementById('signup-terms').checked;
            if (!terms) {
                displayError('signup-terms', 'You must agree to the terms and conditions');
                return false;
            }
            return true;
        }

        // Forgot Password Modal functionality
        document.getElementById('forgot-password-link').addEventListener('click', (e) => {
            e.preventDefault();
            document.getElementById('forgot-password-modal').style.display = 'flex';
            resetForgotPasswordForm();
        });

        document.getElementById('close-forgot-modal').addEventListener('click', () => {
            document.getElementById('forgot-password-modal').style.display = 'none';
            resetForgotPasswordForm();
        });

        function resetForgotPasswordForm() {
            document.getElementById('email-step').style.display = 'block';
            document.getElementById('otp-step').style.display = 'none';
            document.getElementById('password-step').style.display = 'none';
            document.getElementById('forgot-password-form').reset();
            document.querySelectorAll('.otp-input').forEach(input => input.value = '');
            generatedOTP = '';
            enableResendLink();
        }

        function generateOTP() {
            return Math.floor(1000 + Math.random() * 9000).toString();
        }

        function disableResendLink() {
            const resendLink = document.getElementById('resend-otp');
            resendLink.classList.add('disabled');
            resendLink.textContent = 'Resend Code (30s)';
            let countdown = 30;
            resendTimeout = setInterval(() => {
                countdown--;
                resendLink.textContent = `Resend Code (${countdown}s)`;
                if (countdown <= 0) {
                    enableResendLink();
                }
            }, 1000);
        }

        function enableResendLink() {
            if (resendTimeout) {
                clearInterval(resendTimeout);
                resendTimeout = null;
            }
            const resendLink = document.getElementById('resend-otp');
            resendLink.classList.remove('disabled');
            resendLink.textContent = 'Resend Code';
        }

        // OTP Input handling
        document.querySelectorAll('.otp-input').forEach((input, index) => {
            input.addEventListener('input', (e) => {
                if (e.target.value.length === 1 && index < 3) {
                    document.querySelectorAll('.otp-input')[index + 1].focus();
                }
            });

            input.addEventListener('keydown', (e) => {
                if (e.key === 'Backspace' && !input.value && index > 0) {
                    document.querySelectorAll('.otp-input')[index - 1].focus();
                }
            });
        });

        // Send OTP
        document.getElementById('send-otp').addEventListener('click', () => {
            const email = document.getElementById('forgot-email').value;

            if (!email) {
                showMessageBox('Please enter your email address', 'error');
                return;
            }

            if (!validateEmail(email)) {
                showMessageBox('Please enter a valid email address', 'error');
                return;
            }

            const sendBtn = document.getElementById('send-otp');
            toggleLoading(sendBtn, true);
            
            generatedOTP = generateOTP();
            console.log(`Mock OTP sent to ${email}: ${generatedOTP}`);
            
            setTimeout(() => {
                showMessageBox(`OTP sent to ${email}: ${generatedOTP} (For demo purposes)`, 'success');
                document.getElementById('email-step').style.display = 'none';
                document.getElementById('otp-step').style.display = 'block';
                disableResendLink();
                document.querySelectorAll('.otp-input')[0].focus();
                toggleLoading(sendBtn, false);
            }, 1000);
        });

        // Verify OTP
        document.getElementById('verify-otp').addEventListener('click', () => {
            const enteredOTP = Array.from(document.querySelectorAll('.otp-input')).map(input => input.value).join('');

            if (enteredOTP === generatedOTP) {
                document.getElementById('otp-step').style.display = 'none';
                document.getElementById('password-step').style.display = 'block';
            } else {
                showMessageBox('Invalid OTP. Please try again.', 'error');
                document.querySelectorAll('.otp-input').forEach(input => input.value = '');
                document.querySelectorAll('.otp-input')[0].focus();
            }
        });

        // Resend OTP
        document.getElementById('resend-otp').addEventListener('click', (e) => {
            e.preventDefault();
            if (document.getElementById('resend-otp').classList.contains('disabled')) return;

            const email = document.getElementById('forgot-email').value;
            generatedOTP = generateOTP();
            console.log(`Mock OTP resent to ${email}: ${generatedOTP}`);
            showMessageBox(`OTP resent to ${email}: ${generatedOTP} (For demo purposes)`, 'success');
            disableResendLink();
            document.querySelectorAll('.otp-input').forEach(input => input.value = '');
            document.querySelectorAll('.otp-input')[0].focus();
        });

        // Reset Password
        document.getElementById('forgot-password-form').addEventListener('submit', (e) => {
            e.preventDefault();

            const newPassword = document.getElementById('new-password').value;
            const confirmNewPassword = document.getElementById('confirm-new-password').value;

            if (!newPassword || !confirmNewPassword) {
                showMessageBox('Please fill in all password fields', 'error');
                return;
            }

            if (newPassword !== confirmNewPassword) {
                showMessageBox('Passwords do not match', 'error');
                return;
            }

            if (newPassword.length < 6) {
                showMessageBox('Password must be at least 6 characters', 'error');
                return;
            }

            const resetBtn = document.getElementById('reset-password-btn');
            toggleLoading(resetBtn, true);

            setTimeout(() => {
                showMessageBox('Password reset successful! Please login with your new password.', 'success');
                document.getElementById('forgot-password-modal').style.display = 'none';
                resetForgotPasswordForm();
                switchTab('signin');
                toggleLoading(resetBtn, false);
            }, 1000);
        });

        // Close modal when clicking outside
        document.getElementById('forgot-password-modal').addEventListener('click', (e) => {
            if (e.target === e.currentTarget) {
                document.getElementById('forgot-password-modal').style.display = 'none';
                resetForgotPasswordForm();
            }
        });

        // Message Box implementation
        function showMessageBox(message, type = 'info') {
            let msgBox = document.getElementById('message-box');
            if (!msgBox) {
                msgBox = document.createElement('div');
                msgBox.id = 'message-box';
                msgBox.style.cssText = `
                    position: fixed;
                    top: 20px;
                    left: 50%;
                    transform: translateX(-50%);
                    padding: 15px 30px;
                    border-radius: 12px;
                    font-size: 1rem;
                    font-weight: 500;
                    color: white;
                    z-index: 10000;
                    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
                    opacity: 0;
                    transition: opacity 0.5s ease-in-out;
                    min-width: 250px;
                    text-align: center;
                `;
                document.body.appendChild(msgBox);
            }
            
            if (type === 'success') {
                msgBox.style.backgroundColor = '#10B981';
            } else if (type === 'error') {
                msgBox.style.backgroundColor = '#EF4444';
            } else {
                msgBox.style.backgroundColor = '#4F46E5';
            }

            msgBox.textContent = message;
            msgBox.style.opacity = '1';

            setTimeout(() => {
                msgBox.style.opacity = '0';
            }, 3000);
        }

        // DOMContentLoaded listener to initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize the page state
        });
    </script>
</body>
</html>