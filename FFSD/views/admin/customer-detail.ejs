<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Customer Details - Admin</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
        }

        .header {
            background: white;
            padding: 20px 30px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            margin-bottom: 30px;
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            align-items: center;
            gap: 1rem;
        }

        .header h1 {
            color: #2d3748;
            font-size: 24px;
        }

        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
        }

        .btn-back {
            background: #6b7280;
            color: white;
        }

        .btn-back:hover {
            background: #4b5563;
            transform: translateY(-2px);
        }

        .btn-edit {
            background: #10b981;
            color: white;
        }

        .btn-edit:hover {
            background: #059669;
            transform: translateY(-2px);
        }

        .btn-delete {
            background: #ef4444;
            color: white;
            position: relative;
        }

        .btn-delete:hover {
            background: #dc2626;
            transform: translateY(-2px);
        }

        .btn-delete.loading::after {
            content: '';
            display: inline-block;
            width: 16px;
            height: 16px;
            border: 2px solid #fff;
            border-radius: 50%;
            border-top-color: transparent;
            animation: spin 1s linear infinite;
            margin-left: 8px;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .detail-card {
            background: white;
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        .detail-header {
            border-bottom: 3px solid #667eea;
            padding-bottom: 20px;
            margin-bottom: 30px;
        }

        .detail-header h2 {
            color: #1f2937;
            font-size: 28px;
            margin-bottom: 5px;
        }

        .detail-header .subtitle {
            color: #6b7280;
            font-size: 14px;
        }

        .detail-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
        }

        .detail-item {
            padding: 15px;
            background: #f9fafb;
            border-radius: 10px;
            border-left: 4px solid #667eea;
            transition: transform 0.3s ease;
        }

        .detail-item:hover {
            transform: translateY(-3px);
        }

        .detail-item label {
            display: block;
            font-size: 12px;
            font-weight: 600;
            color: #6b7280;
            text-transform: uppercase;
            margin-bottom: 8px;
        }

        .detail-item .value {
            font-size: 16px;
            color: #1f2937;
            font-weight: 500;
        }

        .section-title {
            font-size: 20px;
            color: #1f2937;
            margin: 40px 0 20px 0;
            padding-bottom: 10px;
            border-bottom: 2px solid #e5e7eb;
        }

        .alert {
            padding: 15px 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .alert-info {
            background: #dbeafe;
            color: #1e40af;
            border-left: 4px solid #3b82f6;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .modal-content {
            background: white;
            padding: 30px;
            border-radius: 15px;
            max-width: 500px;
            width: 90%;
            position: relative;
        }

        .modal-content h2 {
            margin-bottom: 20px;
            color: #1f2937;
        }

        .modal-content .close {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 24px;
            cursor: pointer;
            color: #6b7280;
        }

        .modal-content form {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .modal-content input {
            padding: 10px;
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            font-size: 14px;
        }

        .modal-content input:invalid {
            border-color: #ef4444;
        }

        .modal-content .btn {
            align-self: flex-end;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .detail-card {
                padding: 20px;
            }
            .header h1 {
                font-size: 20px;
            }
            .detail-grid {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 480px) {
            .container {
                padding: 10px;
            }
            .btn {
                padding: 8px 16px;
                font-size: 12px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Header -->
        <div class="header">
            <h1><i class="fas fa-user"></i> Customer Details</h1>
            <div>
                <a href="/admindashboard" class="btn btn-back"><i class="fas fa-arrow-left"></i> Back to Dashboard</a>
                <button class="btn btn-edit" onclick="openEditModal()"><i class="fas fa-edit"></i> Edit Customer</button>
                <button class="btn btn-delete" onclick="deleteCustomer('<%= customer._id %>')"><i class="fas fa-trash"></i> Delete Customer</button>
            </div>
        </div>

        <!-- Detail Card -->
        <div class="detail-card">
            <div class="detail-header">
                <h2><%= customer.name %></h2>
                <p class="subtitle">Customer ID: <%= customer._id %></p>
            </div>

            <div class="alert alert-info">
                <strong><i class="fas fa-info-circle"></i> Account Information</strong><br>
                This customer account was created on <%= new Date(customer.createdAt).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %>
            </div>

            <h3 class="section-title">Personal Information</h3>
            <div class="detail-grid">
                <div class="detail-item">
                    <label>Full Name</label>
                    <div class="value"><%= customer.name %></div>
                </div>

                <div class="detail-item">
                    <label>Email Address</label>
                    <div class="value"><%= customer.email %></div>
                </div>

                <div class="detail-item">
                    <label>Phone Number</label>
                    <div class="value"><%= customer.phone || 'Not provided' %></div>
                </div>

                <div class="detail-item">
                    <label>Date of Birth</label>
                    <div class="value"><%= customer.dob ? new Date(customer.dob).toLocaleDateString() : 'Not provided' %></div>
                </div>

                <div class="detail-item">
                    <label>Role</label>
                    <div class="value"><%= customer.role || 'Customer' %></div>
                </div>

                <div class="detail-item">
                    <label>Member Since</label>
                    <div class="value"><%= new Date(customer.createdAt).toLocaleDateString() %></div>
                </div>
            </div>

            <h3 class="section-title">Account Timestamps</h3>
            <div class="detail-grid">
                <div class="detail-item">
                    <label>Created At</label>
                    <div class="value">
                        <%= new Date(customer.createdAt).toLocaleString('en-US', { 
                            year: 'numeric', 
                            month: 'short', 
                            day: 'numeric', 
                            hour: '2-digit', 
                            minute: '2-digit' 
                        }) %>
                    </div>
                </div>

                <div class="detail-item">
                    <label>Last Updated</label>
                    <div class="value">
                        <%= new Date(customer.updatedAt).toLocaleString('en-US', { 
                            year: 'numeric', 
                            month: 'short', 
                            day: 'numeric', 
                            hour: '2-digit', 
                            minute: '2-digit' 
                        }) %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div class="modal" id="editModal">
        <div class="modal-content">
            <span class="close" onclick="closeEditModal()">&times;</span>
            <h2>Edit Customer</h2>
            <form id="editCustomerForm" onsubmit="updateCustomer(event, '<%= customer._id %>')">
                <label for="name">Full Name</label>
                <input type="text" id="name" name="name" value="<%= customer.name %>" required>
                
                <label for="email">Email Address</label>
                <input type="email" id="email" name="email" value="<%= customer.email %>" required>
                
                <label for="phone">Phone Number</label>
                <input type="tel" id="phone" name="phone" value="<%= customer.phone || '' %>" pattern="[0-9]{10}" placeholder="10-digit phone number">
                
                <label for="dob">Date of Birth</label>
                <input type="date" id="dob" name="dob" value="<%= customer.dob ? new Date(customer.dob).toISOString().split('T')[0] : '' %>">
                
                <button type="submit" class="btn btn-edit"><i class="fas fa-save"></i> Save Changes</button>
            </form>
        </div>
    </div>

    <script>
        function openEditModal() {
            document.getElementById('editModal').style.display = 'flex';
        }

        function closeEditModal() {
            document.getElementById('editModal').style.display = 'none';
        }

        function updateCustomer(event, id) {
            event.preventDefault();
            const form = document.getElementById('editCustomerForm');
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const formData = new FormData(form);
            const data = Object.fromEntries(formData);

            fetch(`/admin/update-customer/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Customer updated successfully');
                    window.location.reload();
                } else {
                    alert('Error updating customer: ' + data.error);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error updating customer');
            });
        }

        function deleteCustomer(id) {
            if (confirm('Are you sure you want to delete this customer? This action cannot be undone.')) {
                const deleteBtn = document.querySelector('.btn-delete');
                deleteBtn.classList.add('loading');
                deleteBtn.disabled = true;

                fetch(`/admin/delete-customer/${id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    deleteBtn.classList.remove('loading');
                    deleteBtn.disabled = false;
                    if (data.success) {
                        alert('Customer deleted successfully');
                        window.location.href = '/admindashboard';
                    } else {
                        alert('Error deleting customer: ' + data.error);
                    }
                })
                .catch(error => {
                    deleteBtn.classList.remove('loading');
                    deleteBtn.disabled = false;
                    console.error('Error:', error);
                    alert('Error deleting customer');
                });
            }
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('editModal');
            if (event.target === modal) {
                closeEditModal();
            }
        };

        // Keyboard accessibility
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                closeEditModal();
            }
        });
    </script>
</body>
</html>