<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Architectural Design Request Form | Build & Beyond</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        :root {
            --primary: #1e293b;
            --accent: #facc15;
            --gray: #e2e8f0;
            --text-secondary: #475569;
        }

        body {
            @apply bg-gray-50 text-gray-900 min-h-screen flex items-center justify-center p-4;
        }

        .container {
            @apply max-w-3xl mx-auto bg-white p-8 rounded-2xl shadow-lg;
        }

        .page-title {
            @apply text-center mb-8;
        }

        .page-title h1 {
            @apply text-2xl md:text-3xl font-bold text-primary;
        }

        .page-title .underline {
            @apply w-24 h-1 bg-gradient-to-r from-accent to-primary mx-auto mt-2 rounded;
        }

        .section {
            @apply mb-6 pb-6 border-b border-gray-200;
        }

        .section-title {
            @apply text-xl font-semibold text-primary mb-4 relative;
        }

        .section-title::after {
            @apply absolute bottom-0 left-0 w-12 h-1 bg-accent rounded;
            content: '';
        }

        .form-grid {
            @apply grid gap-4 md:grid-cols-2;
        }

        .form-group {
            @apply mb-4;
        }

        label {
            @apply block mb-2 font-medium text-text-secondary;
        }

        label.required::after {
            content: '*';
            @apply text-accent ml-1;
        }

        input, select, textarea {
            @apply w-full p-3 border-2 border-gray rounded-lg text-primary bg-white focus:outline-none focus:border-accent focus:ring-2 focus:ring-accent/20 transition-all;
        }

        textarea {
            @apply min-h-[100px] resize-y;
        }

        select {
            @apply h-12;
        }

        .file-upload {
            @apply mt-2;
        }

        .file-upload label {
            @apply flex items-center justify-center bg-gray-50 border-2 border-dashed border-gray-300 rounded-lg p-6 cursor-pointer hover:bg-gray-100 hover:border-accent transition-all text-center text-text-secondary;
        }

        .file-upload input {
            @apply hidden;
        }

        .image-preview-container {
            @apply mt-4 grid gap-4 grid-cols-2 sm:grid-cols-3;
        }

        .image-preview {
            @apply relative rounded-lg overflow-hidden h-36 shadow-sm;
        }

        .image-preview img {
            @apply w-full h-full object-cover;
        }

        .image-preview .file-name {
            @apply absolute bottom-0 left-0 right-0 bg-primary/80 text-white p-2 text-xs truncate;
        }

        .image-preview .remove-btn {
            @apply absolute top-2 right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm cursor-pointer hover:bg-red-600 transition-all;
        }

        .pdf-preview {
            @apply flex flex-col items-center justify-center bg-gray-50 text-red-500 text-sm;
        }

        .pdf-preview svg {
            @apply w-10 h-10 mb-2 text-red-500;
        }

        .btn-submit {
            @apply bg-accent text-primary px-8 py-3 rounded-full font-semibold hover:bg-yellow-500 hover:shadow-lg transition-all block mx-auto mt-6;
        }

        @media (max-width: 640px) {
            .container {
                @apply p-4;
            }

            .form-grid {
                @apply grid-cols-1;
            }

            .page-title h1 {
                @apply text-xl;
            }

            .section-title {
                @apply text-lg;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="page-title">
            <h1>Architectural Design Request Form</h1>
            <div class="underline"></div>
        </div>

        <form id="designRequestForm" enctype="multipart/form-data" action="/architect_submit" method="post">
            <input type="hidden" id="workerId" name="workerId" value="">

            <!-- Project Information -->
            <div class="section">
                <h2 class="section-title">Project Information</h2>
                <div class="form-group">
                    <label for="projectName" class="required">Project Name</label>
                    <input type="text" id="projectName" name="projectName" required aria-required="true">
                </div>
                <div class="form-grid">
                    <div class="form-group">
                        <label for="designType" class="required">Type of Design</label>
                        <select id="designType" name="designType" required aria-required="true">
                            <option value="">Select Design Type</option>
                            <option value="Residential">Residential</option>
                            <option value="Commercial">Commercial</option>
                            <option value="Landscape">Landscape</option>
                            <option value="Mixed-Use">Mixed-Use</option>
                            <option value="Industrial">Industrial</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="architecturalStyle" class="required">Preferred Architectural Style</label>
                        <select id="architecturalStyle" name="architecturalStyle" required aria-required="true">
                            <option value="">Select Style</option>
                            <option value="Modern">Modern</option>
                            <option value="Traditional">Traditional</option>
                            <option value="Contemporary">Contemporary</option>
                            <option value="Minimalist">Minimalist</option>
                            <option value="Mediterranean">Mediterranean</option>
                            <option value="Victorian">Victorian</option>
                            <option value="Colonial">Colonial</option>
                            <option value="Industrial">Industrial</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                </div>
            </div>

            <!-- Customer Details -->
            <div class="section">
                <h2 class="section-title">Customer Details</h2>
                <div class="form-grid">
                    <div class="form-group">
                        <label for="fullName" class="required">Full Name</label>
                        <input type="text" id="fullName" name="fullName" required aria-required="true">
                    </div>
                    <div class="form-group">
                        <label for="contactNumber" class="required">Contact Number</label>
                        <input type="tel" id="contactNumber" name="contactNumber" required aria-required="true" pattern="[0-9]{10,}" title="Please enter a valid phone number">
                    </div>
                    <div class="form-group">
                        <label for="email" class="required">Email Address</label>
                        <input type="email" id="email" name="email" required aria-required="true">
                    </div>
                </div>
            </div>

            <!-- Customer Address -->
            <div class="section">
                <h2 class="section-title">Customer Address</h2>
                <div class="form-group">
                    <label for="streetAddress" class="required">Street Address</label>
                    <input type="text" id="streetAddress" name="streetAddress" required aria-required="true">
                </div>
                <div class="form-grid">
                    <div class="form-group">
                        <label for="city" class="required">City</label>
                        <input type="text" id="city" name="city" required aria-required="true">
                    </div>
                    <div class="form-group">
                        <label for="state" class="required">State</label>
                        <input type="text" id="state" name="state" required aria-required="true">
                    </div>
                    <div class="form-group">
                        <label for="zipCode" class="required">Pincode/ZIP Code</label>
                        <input type="text" id="zipCode" name="zipCode" required aria-required="true" pattern="[0-9]{5,}" title="Please enter a valid ZIP code">
                    </div>
                </div>
            </div>

            <!-- Plot Information -->
            <div class="section">
                <h2 class="section-title">Plot Information</h2>
                <div class="form-group">
                    <label for="plotLocation" class="required">Plot Location/Address</label>
                    <input type="text" id="plotLocation" name="plotLocation" required aria-required="true">
                </div>
                <div class="form-grid">
                    <div class="form-group">
                        <label for="plotSize" class="required">Plot Size (in sq.ft or sq.m)</label>
                        <input type="text" id="plotSize" name="plotSize" required aria-required="true" pattern="^[0-9]+(\.[0-9]+)?\s*(sq\.ft|sq\.m)$" title="Please enter a valid plot size (e.g., 1000 sq.ft or 100 sq.m)">
                    </div>
                    <div class="form-group">
                        <label for="plotOrientation" class="required">Plot Orientation</label>
                        <select id="plotOrientation" name="plotOrientation" required aria-required="true">
                            <option value="">Select Orientation</option>
                            <option value="North">North</option>
                            <option value="South">South</option>
                            <option value="East">East</option>
                            <option value="West">West</option>
                            <option value="North-East">North-East</option>
                            <option value="North-West">North-West</option>
                            <option value="South-East">South-East</option>
                            <option value="South-West">South-West</option>
                        </select>
                    </div>
                </div>
            </div>

            <!-- Design Requirements -->
            <div class="section">
                <h2 class="section-title">Design Requirements</h2>
                <div class="form-grid">
                    <div class="form-group">
                        <label for="numFloors" class="required">Number of Floors</label>
                        <select id="numFloors" name="numFloors" required aria-required="true">
                            <option value="">Select Number</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5+">5+</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="budget">Max Budget (optional)</label>
                        <input type="text" id="budget" name="budget" placeholder="e.g., 100000" pattern="^[0-9]+$" title="Please enter a valid number">
                    </div>
                    <div class="form-group">
                        <label for="completionDate">Preferred Completion Date</label>
                        <input type="date" id="completionDate" name="completionDate" min="2025-10-12">
                    </div>
                </div>

                <div id="floorRequirements" class="form-group"></div>

                <div class="form-group">
                    <label for="specialFeatures">Special Features (optional)</label>
                    <textarea id="specialFeatures" name="specialFeatures" placeholder="e.g., Balcony, Garden, Parking Space, Swimming Pool, Home Theater"></textarea>
                </div>

                <div class="form-group">
                    <label>Reference Images/Sketches (optional)</label>
                    <div class="file-upload">
                        <label for="referenceImages">
                            <span>Drop files here or click to upload<br>(JPG, PNG, PDF up to 5MB)</span>
                        </label>
                        <input type="file" id="referenceImages" name="referenceImages" multiple accept=".jpg,.jpeg,.png,.pdf">
                    </div>
                    <div id="imagePreviewContainer" class="image-preview-container"></div>
                </div>
            </div>

            <button type="submit" class="btn-submit">Submit Design Request</button>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Initialize workerId from URL
            const urlParams = new URLSearchParams(window.location.search);
            const workerId = urlParams.get('workerId');
            if (workerId) {
                document.getElementById('workerId').value = workerId;
            }

            // Floor requirements
            const numFloorsSelect = document.getElementById('numFloors');
            const floorRequirementsContainer = document.getElementById('floorRequirements');

            numFloorsSelect.addEventListener('change', () => {
                const numFloors = numFloorsSelect.value === '5+' ? 5 : parseInt(numFloorsSelect.value) || 0;
                floorRequirementsContainer.innerHTML = '';
                for (let i = 1; i <= numFloors; i++) {
                    const floorDiv = document.createElement('div');
                    floorDiv.className = 'form-group';
                    floorDiv.innerHTML = `
                        <label for="floor${i}" class="required">Floor ${i} Room Requirements</label>
                        <textarea id="floor${i}" name="floorRequirements[${i-1}][details]" placeholder="e.g., 2 Bedrooms, 1 Bathroom, Living Room" required aria-required="true"></textarea>
                        <input type="hidden" name="floorRequirements[${i-1}][floorNumber]" value="${i}">
                    `;
                    floorRequirementsContainer.appendChild(floorDiv);
                }
            });

            // File upload handling
            const referenceImagesInput = document.getElementById('referenceImages');
            const imagePreviewContainer = document.getElementById('imagePreviewContainer');
            referenceImagesInput?.addEventListener('change', (event) => {
                imagePreviewContainer.innerHTML = '';
                const files = Array.from(event.target.files);
                const maxFileSize = 5 * 1024 * 1024;
                const allowedTypes = ['image/jpeg', 'image/png', 'application/pdf'];

                files.forEach((file, index) => {
                    if (file.size > maxFileSize) {
                        alert(`File ${file.name} exceeds 5MB limit.`);
                        return;
                    }
                    if (!allowedTypes.includes(file.type)) {
                        alert(`File ${file.name} is not a valid type (JPG, PNG, PDF only).`);
                        return;
                    }

                    const previewElement = document.createElement('div');
                    previewElement.className = 'image-preview';
                    const removeButton = document.createElement('button');
                    removeButton.className = 'remove-btn';
                    removeButton.textContent = '×';
                    removeButton.setAttribute('aria-label', `Remove ${file.name}`);
                    removeButton.addEventListener('click', () => {
                        const dt = new DataTransfer();
                        files.filter(f => f !== file).forEach(f => dt.items.add(f));
                        referenceImagesInput.files = dt.files;
                        imagePreviewContainer.removeChild(previewElement);
                    });

                    const fileName = document.createElement('div');
                    fileName.className = 'file-name';
                    fileName.textContent = file.name;

                    previewElement.append(fileName, removeButton);

                    if (file.type.startsWith('image/')) {
                        const reader = new FileReader();
                        reader.onload = (e) => {
                            const img = document.createElement('img');
                            img.src = e.target.result;
                            img.alt = file.name;
                            previewElement.insertBefore(img, fileName);
                        };
                        reader.readAsDataURL(file);
                    } else if (file.type === 'application/pdf') {
                        previewElement.classList.add('pdf-preview');
                        const pdfIcon = document.createElement('div');
                        pdfIcon.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="0 0 24 24" fill="none" stroke="#d9534f" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><path d="M9 15h6"></path><path d="M9 11h6"></path></svg>';
                        previewElement.insertBefore(pdfIcon, fileName);
                    }

                    imagePreviewContainer.appendChild(previewElement);
                });
            });

            // Form submission with validation
            const form = document.getElementById('designRequestForm');
            form.addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData(form);

                try {
                    const response = await fetch('/architect_submit', {
                        method: 'POST',
                        body: formData,
                    });

                    const data = await response.json();
                    if (!response.ok) {
                        throw new Error(data.message || `HTTP error! Status: ${response.status}`);
                    }

                    if (data.redirect) {
                        window.location.href = data.redirect;
                    } else {
                        alert(data.message || 'Form submitted successfully!');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert(`Failed to submit form: ${error.message}`);
                }
            });
        });
    </script>
</body>
</html>